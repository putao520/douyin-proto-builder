syntax = "proto3";
package data;
message PatternRef {
  string key = 1;
  string default_pattern = 2;
}
message TextFormat {
  string color = 1;
  bool bold = 2;
  bool italic = 3;
  int32 weight = 4;
  int32 italic_angle = 5;
  int32 font_size = 6;
  bool use_heigh_light_color = 7;
  bool use_remote_clor = 8;
}
message TextPieceUser {
  data.User user = 1;
  bool with_colon = 2;
  bool self_show_real_name = 3;
  int32 left_show_extension = 4;
  string left_additional_content = 5;
  string right_additional_content = 6;
}
message TextPieceGift {
  int64 gift_id = 1;
  data.PatternRef name_ref = 2;
}
message TextPieceHeart {
  string color = 1;
}
message TextPiecePatternRef {
  string key = 1;
  string default_pattern = 2;
}
message TextPieceImage {
  data.Image image = 1;
  float scaling_rate = 2;
}
message TextPiece {
  int32 type = 1;
  data.TextFormat format = 2;
  string value_ref = 3;
  string string_value = 11;
  data.TextPieceUser user_value = 21;
  data.TextPieceGift gift_value = 22;
  data.TextPieceHeart heart_value = 23;
  data.TextPiecePatternRef pattern_ref_value = 24;
  data.TextPieceImage image_value = 25;
  string schema_key = 100;
}
message Text {
  string key = 1;
  string default_pattern = 2;
  data.TextFormat default_format = 3;
  repeated data.TextPiece pieces = 4;
}
message CombinedText {
  repeated data.DisplayItem display_items = 1;
  data.SchemaInfo schema_info = 10;
  data.ComboInfo combo_info = 11;
}
message DisplayItem {
  int32 display_item_type = 1;
  bool combo_fresh = 20;
  data.SchemaInfo schema_info = 21;
  data.ImagesItem images_item = 50;
  data.TextItem text_item = 51;
}
message ImagesItem {
  repeated data.Image images = 1;
  int32 display_style = 20;
}
message TextItem {
  data.Text text = 1;
}
message SchemaInfo {
  string schema_url = 1;
}
message ComboInfo {
  int64 combo_seq = 1;
  int64 combo_order = 2;
}
message User {
  int64 id = 1;
  int64 short_id = 2;
  string nickname = 3;
  int32 gender = 4;
  string signature = 5;
  int32 level = 6;
  int64 birthday = 7;
  string telephone = 8;
  data.Image avatar_thumb = 9;
  data.Image avatar_medium = 10;
  data.Image avatar_large = 11;
  bool verified = 12;
  int32 experience = 13;
  string city = 14;
  int32 status = 15;
  int64 create_time = 16;
  int64 modify_time = 17;
  int32 secret = 18;
  string share_qrcode_uri = 19;
  int32 income_share_percent = 20;
  repeated data.Image badge_image_list = 21;
  data.User.FollowInfo follow_info = 22;
  data.User.PayGrade pay_grade = 23;
  data.User.FansClub fans_club = 24;
  data.User.Border border = 25;
  string special_id = 26;
  data.Image avatar_border = 27;
  data.Image medal = 28;
  repeated data.Image real_time_icons = 29;
  repeated data.Image new_real_time_icons = 30;
  int64 top_vip_no = 31;
  data.User.UserAttr user_attr = 32;
  data.User.OwnRoom own_room = 33;
  int64 pay_score = 34;
  int64 ticket_count = 35;
  data.User.AnchorInfo anchor_info = 36;
  int32 link_mic_stats = 37;
  string display_id = 38;
  bool with_commerce_permission = 39;
  bool with_fusion_shop_entry = 40;
  int64 total_recharge_diamond_count = 41;
  data.User.AnchorLevel webcast_anchor_level = 42;
  string verified_content = 43;
  data.User.AuthorStats author_stats = 44;
  repeated data.User top_fans = 45;
  string sec_uid = 46;
  int32 user_role = 47;
  data.User.XiguaParams xigua_info = 48;
  data.User.ActivityInfo activity_reward = 49;
  data.User.NobleLevelInfo noble_info = 50;
  data.User.BrotherhoodInfo brotherhood_info = 51;
  data.Image personal_card = 52;
  data.User.AuthenticationInfo authentication_info = 53;
  int32 authorization_info = 54;
  int32 adversary_authorization_info = 55;
  data.User.PoiInfo poi_info = 56;
  repeated data.Image media_badge_image_list = 57;
  int32 adversary_user_status = 58;
  data.UserVIPInfo user_vip_info = 59;
  repeated int64 commerce_webcast_config_ids = 60;
  repeated data.Image badge_image_list_v2 = 61;
  data.IndustryCertification industry_certification = 62;
  string location_city = 63;
  data.User.FansGroupInfo fans_group_info = 64;
  string remark_name = 65;
  int32 mystery_man = 66;
  string web_rid = 67;
  string desensitized_nickname = 68;
  data.User.JAccreditInfo j_accredit_info = 69;
  data.User.Subscribe subscribe = 70;
  bool is_anonymous = 71;
  int32 consume_diamond_level = 72;
  string webcast_uid = 73;
  data.User.ProfileStyleParams profile_style_params = 74;
  data.User.UserDressInfo user_dress_info = 75;
  data.User.BizRelation biz_relation = 76;
  bool allow_be_located = 1001;
  bool allow_find_by_contacts = 1002;
  bool allow_others_download_video = 1003;
  bool allow_others_download_when_sharing_video = 1004;
  bool allow_share_show_profile = 1005;
  bool allow_show_in_gossip = 1006;
  bool allow_show_my_action = 1007;
  bool allow_strange_comment = 1008;
  bool allow_unfollower_comment = 1009;
  bool allow_use_linkmic = 1010;
  data.User.AnchorLevel anchor_level = 1011;
  data.Image avatar_jpg = 1012;
  string bg_img_url = 1013;
  string birthday_description = 1014;
  bool birthday_valid = 1015;
  int32 block_status = 1016;
  int32 comment_restrict = 1017;
  string constellation = 1018;
  int32 disable_ichat = 1019;
  int64 enable_ichat_img = 1020;
  int32 exp = 1021;
  int64 fan_ticket_count = 1022;
  bool fold_stranger_chat = 1023;
  int64 follow_status = 1024;
  bool hotsoon_verified = 1025;
  string hotsoon_verified_reason = 1026;
  int32 ichat_restrict_type = 1027;
  string id_str = 1028;
  bool is_follower = 1029;
  bool is_following = 1030;
  bool need_profile_guide = 1031;
  int64 pay_scores = 1032;
  bool push_comment_status = 1033;
  bool push_digg = 1034;
  bool push_follow = 1035;
  bool push_friend_action = 1036;
  bool push_ichat = 1037;
  bool push_status = 1038;
  bool push_video_post = 1039;
  bool push_video_recommend = 1040;
  data.User.UserStats stats = 1041;
  bool verified_mobile = 1042;
  string verified_reason = 1043;
  bool with_car_management_permission = 1044;
  int32 age_range = 1045;
  int64 watch_duration_month = 1046;
  message FollowInfo {
    int64 following_count = 1;
    int64 follower_count = 2;
    int64 follow_status = 3;
    int64 push_status = 4;
    string remark_name = 5;
    string follower_count_str = 6;
    string following_count_str = 7;
    bool invalid_follow_status = 8;
  }
  message PayGrade {
    int64 total_diamond_count = 1;
    data.Image diamond_icon = 2;
    string name = 3;
    data.Image icon = 4;
    string next_name = 5;
    int64 level = 6;
    data.Image next_icon = 7;
    int64 next_diamond = 8;
    int64 now_diamond = 9;
    int64 this_grade_min_diamond = 10;
    int64 this_grade_max_diamond = 11;
    int64 pay_diamond_bak = 12;
    string grade_describe = 13;
    repeated data.User.PayGrade.GradeIcon grade_icon_list = 14;
    int64 screen_chat_type = 15;
    data.Image im_icon = 16;
    data.Image im_icon_with_level = 17;
    data.Image live_icon = 18;
    data.Image new_im_icon_with_level = 19;
    data.Image new_live_icon = 20;
    int64 upgrade_need_consume = 21;
    string next_privileges = 22;
    data.Image background = 23;
    data.Image background_back = 24;
    int64 score = 25;
    data.GradeBuffInfo buff_info = 26;
    bool grade_describe_shining = 27;
    string grade_banner = 1001;
    data.Image profile_dialog_bg = 1002;
    data.Image profile_dialog_bg_back = 1003;
    message GradeIcon {
      data.Image icon = 1;
      int64 icon_diamond = 2;
      int64 level = 3;
      string level_str = 4;
    }
  }
  message FansClub {
    data.User.FansClub.FansClubData data = 1;
    message FansClubData {
      string club_name = 1;
      int32 level = 2;
      int32 user_fans_club_status = 3;
      data.User.FansClub.FansClubData.UserBadge badge = 4;
      repeated int64 available_gift_ids = 5;
      int64 anchor_id = 6;
      int32 badge_type = 7;
      message UserBadge {
        string title = 2;
      }
    }
  }
  message Border {
    data.Image icon = 1;
    int64 level = 2;
    data.Image thumb_icon = 3;
    string dress_id = 4;
  }
  message UserAttr {
    bool is_muted = 1;
    bool is_admin = 2;
    bool is_super_admin = 3;
    repeated int32 admin_privileges = 4;
  }
  message OwnRoom {
    repeated int64 room_ids = 1;
    repeated string room_ids_str = 2;
    repeated int32 room_ids_display = 3;
  }
  message AnchorInfo {
    int64 level = 1;
  }
  message AnchorLevel {
    int64 level = 1;
    int64 experience = 2;
    int64 lowest_experience_this_level = 3;
    int64 highest_experience_this_level = 4;
    int64 task_start_experience = 5;
    int64 task_start_time = 6;
    int64 task_decrease_experience = 7;
    int64 task_target_experience = 8;
    int64 task_end_time = 9;
    data.Image profile_dialog_bg = 10;
    data.Image profile_dialog_bg_back = 11;
    data.Image stage_level = 12;
    data.Image small_icon = 13;
  }
  message AuthorStats {
    int64 video_total_count = 1;
    int64 video_total_play_count = 2;
    int64 video_total_share_count = 3;
    int64 video_total_series_count = 4;
    int64 variety_show_play_count = 5;
    int64 video_total_favorite_count = 6;
  }
  message XiguaParams {
    string user_auth_info = 1;
    int64 ugc_publish_media_id = 2;
    int64 media_id = 3;
    string author_desc = 4;
    string description = 5;
    bool user_verified = 6;
    data.User.XiguaParams.UserExtendInfo user_extend_info = 7;
    int64 xigua_uid = 8;
    string nick_name = 9;
    data.Image avatar_thumb = 10;
    data.Image avatar_medium = 11;
    data.Image avatar_large = 12;
    message UserExtendInfo {
      string share_url = 1;
      string r_schema_url = 2;
      data.User.XiguaParams.UserExtendInfo.RocketSchema rocket_schema_info = 3;
      message RocketSchema {
        string r_schema = 1;
        string r_token = 2;
        string download_url = 3;
      }
    }
  }
  message ActivityInfo {
    data.Image Badge = 1;
    data.Image StoryTag = 2;
  }
  message NobleLevelInfo {
    data.Image noble_background = 1;
    int64 noble_level = 2;
    data.Image noble_icon = 3;
    string noble_name = 4;
    int64 expire_time = 5;
    data.Image noble_big_icon = 6;
    data.Image noble_icon_with_back = 7;
    data.Image noble_boarder = 8;
    repeated string noble_background_color = 9;
  }
  message BrotherhoodInfo {
    string name = 1;
    int64 level = 2;
    data.Image background = 3;
    string font_color = 4;
  }
  message AuthenticationInfo {
    string custom_verify = 1;
    string enterprise_verify_reason = 2;
    data.Image authentication_badge = 3;
    repeated int32 level_list = 4;
  }
  message PoiInfo {
    bool is_poi_enabled = 1;
    int64 poi_id = 2;
    string poi_name = 3;
    string poi_id_str = 4;
    int64 follower_count_permission = 5;
    int64 white_user_permission = 6;
  }
  message FansGroupInfo {
    string list_fans_group_url = 1;
  }
  message JAccreditInfo {
    int32 JAccreditBasic = 1;
    int32 JAccreditAdvance = 2;
    int32 JAccreditContent = 3;
    int32 JAccreditLive = 4;
  }
  message Subscribe {
    bool is_member = 1;
    int64 level = 2;
    int64 identity_type = 3;
    int64 buy_type = 4;
    int64 open = 5;
  }
  message ProfileStyleParams {
    int64 profile_style = 1;
    int64 smart_switch = 2;
  }
  message UserDressInfo {
    repeated string dress_wear_ids = 1;
    repeated string dress_own_ids = 2;
  }
  message BizRelation {
    bool shop_fans_club_reverse = 1;
  }
  message UserStats {
    int64 id = 1;
    string id_str = 2;
    int64 following_count = 3;
    int64 follower_count = 4;
    int64 record_count = 5;
    int64 total_duration = 6;
    int64 daily_fan_ticket_count = 7;
    int64 daily_income = 8;
    int64 item_count = 9;
    int64 favorite_item_count = 10;
    int64 diamond_count = 11;
    int64 diamond_consumed_count = 12;
    int64 tuwen_item_count = 13;
  }
}
message IndustryCertification {
  data.IndustryCertificationProfile profile = 1;
  data.IndustryCertificationRoom room = 2;
}
message IndustryCertificationProfile {
  data.Image icon = 1;
  string content = 2;
  string schema = 3;
  string content_color = 4;
  string bg_color = 5;
  int64 cert_type = 6;
}
message IndustryCertificationRoom {
  data.IndustryCertificationRoom.RoomOwner room_owner = 1;
  message RoomOwner {
    data.Image title = 1;
    string sub_title = 2;
    string left_color = 3;
    string right_color = 4;
    int32 anchor_industry_type = 5;
    data.Image brand_store_title = 6;
    data.Image brand_store_background = 7;
    data.Image anchor_reds_icon = 8;
    data.Image anchor_reds_small_icon = 9;
  }
}
message Image {
  repeated string url_list = 1;
  string uri = 2;
  int64 height = 3;
  int64 width = 4;
  string avg_color = 5;
  int32 image_type = 6;
  string open_web_url = 7;
  data.Image.Content content = 8;
  bool is_animated = 9;
  repeated data.Image.NinePatchSetting flex_setting_list = 10;
  repeated data.Image.NinePatchSetting text_setting_list = 11;
  message Content {
    string name = 1;
    string font_color = 2;
    int64 level = 3;
    string alternative_text = 4;
  }
  message NinePatchSetting {
    repeated int64 setting_list = 1;
  }
}
message AnchorLinkmicUserSettings {
  bool is_turn_on = 1;
  bool accept_multi_linkmic = 2;
  bool accept_not_follower_invite = 3;
  bool allow_gift_to_other_anchors = 4;
  bool accept_friend_invite = 5;
  bool accept_hourly_rank_invite = 6;
  bool accept_popularity_rank_invite = 7;
  bool accept_recommend_search_invite = 8;
}
message BattleUserSettings {
  bool is_turn_on = 1;
  bool accept_not_follower_invite = 2;
  bool allow_gift_to_other_anchors = 3;
  bool accept_friend_invite = 4;
  bool accept_hourly_rank_invite = 5;
  bool accept_popularity_rank_invite = 6;
  int64 invite_reject_permanent_total = 7;
  int64 invite_reject_temporary_total = 8;
  string invite_reject_temporary_text = 9;
  bool pk_accept_volume_up = 10;
  bool pk_auto_confirm = 11;
  bool accept_union_recommend_invite = 12;
}
message RivalExtraInfo {
  string text = 1;
  int32 text_type = 2;
  string label = 3;
  int32 anchor_layer = 4;
  data.RivalExtraInfo.LinkerInfo linker_info = 5;
  data.AnchorLinkmicUserSettings linkmic_user_settings = 6;
  data.BattleUserSettings battle_user_settings = 7;
  int64 video_show_score = 8;
  data.RivalExtraInfo.GameInfo game_info = 9;
  string sign_extra = 10;
  string recommend_info = 11;
  int32 from_server_invite_type = 12;
  message LinkerInfo {
    repeated data.RivalExtraInfo.LinkerInfo.UserInfo linked_users = 1;
    message UserInfo {
      int64 user_id = 1;
      string nick_name = 2;
      data.Image avatar_thumb = 3;
    }
  }
  message GameInfo {
    string game_text = 1;
    string game_name = 2;
  }
}
message MultiPKModeInfo {
  int32 mode_tab = 1;
  int64 version = 3;
  int32 switch_source = 4;
  string version_str = 5;
  string battle_config_setting = 6;
}
message GameInviteInfo {
  int32 invite_source = 1;
}
message LinkmicInfo {
  string rtc_ext_info = 1;
  string live_core_info = 2;
}
message MultiChannelInfo {
  bool use_multi_channel = 1;
}
message LinkIconConfig {
  repeated string yellow_dots = 1;
}
message UserVIPInfo {
  int64 vip_level = 1;
  string vip_level_name = 2;
  int32 status = 3;
  int64 start_time = 4;
  int64 end_time = 5;
  int64 remaining_days = 6;
  int64 total_consume = 7;
  int64 target_consume = 8;
}
message GradeBuffInfo {
  int64 buff_level = 1;
  int32 status = 2;
  int64 end_time = 3;
  data.Image buff_badge = 5;
}
message GameExtra {
  int32 kind = 1;
  int32 status = 2;
  int64 game_id = 3;
  int32 gift_limit = 4;
  int64 round_id = 5;
  int32 game_kind = 6;
  int64 chat = 7;
  int64 loader = 8;
  int64 reload = 9;
}
message MatchRoomInfo {
  data.MatchTabFrame match_tab_frame = 1;
  data.MatchTitle match_title = 2;
  data.ToutiaoMatchData match_data = 3;
  string match_hash_tag = 5;
  repeated data.Image background_image_url_list = 6;
  data.Image share_icon = 7;
  data.MatchRoomImInfo im_info = 8;
  data.MatchShareBackground match_share_background = 9;
  string theme_id = 10;
  data.MatchShareBackground match_live_share_background = 11;
  int64 match_id = 12;
}
message MainCameraMatchInfo {
  data.ToutiaoMatchData match_data = 1;
  int64 match_id = 2;
  repeated int64 event_ids = 3;
  int64 content_id = 4;
  data.LeagueInfo league_info = 5;
  bool is_display_score_type = 6;
  repeated int64 hide_tab_ids = 7;
  string match_id_str = 8;
  string content_id_str = 9;
}
message LeagueInfo {
  int64 league_id = 1;
  string cnn_name = 2;
  string enn_name = 3;
  string season = 4;
}
message MatchRoomImInfo {
  data.Image icon = 1;
  string title = 2;
}
message MatchTabFrame {
  repeated data.MatchTab tabs = 1;
  repeated data.MatchTab replay_tabs = 2;
  string color = 3;
  string background_color = 4;
}
message ClientComponent {
  bool is_open = 3;
  int64 template_id = 4;
}
message ClientComponentInfo {
  string container_id = 1;
  data.ClientComponentFunctionInfo function_detail = 2;
}
message ClientComponentFunctionInfo {
  string function_id = 1;
}
message Room {
  int64 id = 1;
  string id_str = 2;
  int64 status = 3;
  int64 owner_user_id = 4;
  string title = 5;
  int64 user_count = 6;
  int64 create_time = 7;
  int64 linkmic_layout = 8;
  int64 finish_time = 9;
  data.RoomExtra extra = 10;
  string dynamic_cover_uri = 11;
  int64 last_ping_time = 13;
  int64 live_id = 14;
  int64 stream_provider = 15;
  int64 os_type = 16;
  int64 client_version = 17;
  bool with_linkmic = 18;
  bool enable_room_perspective = 19;
  data.Image cover = 20;
  data.Image dynamic_cover = 21;
  data.Image dynamic_cover_low = 22;
  string share_url = 23;
  string anchor_share_text = 24;
  string user_share_text = 25;
  int64 stream_id = 26;
  string stream_id_str = 27;
  data.StreamUrl stream_url = 28;
  int64 mosaic_status = 29;
  string mosaic_tip = 30;
  int64 cell_style = 31;
  data.LinkMic link_mic = 32;
  int64 luckymoney_num = 33;
  repeated data.Decoration deco_list = 34;
  repeated data.TopFan top_fans = 35;
  data.RoomStats stats = 36;
  string sun_daily_icon_content = 37;
  string distance = 38;
  string distance_city = 39;
  string location = 40;
  string real_distance = 41;
  data.Image feed_room_label = 42;
  string common_label_list = 43;
  data.RoomUserAttr living_room_attrs = 44;
  repeated int64 admin_user_ids = 45;
  data.User owner = 46;
  string private_info = 47;
  bool has_commerce_goods = 48;
  bool live_type_normal = 49;
  bool live_type_linkmic = 50;
  bool live_type_audio = 51;
  bool live_type_third_party = 52;
  bool live_type_screenshot = 53;
  bool live_type_sandbox = 54;
  bool live_type_official = 55;
  int64 group_id = 59;
  int64 orientation = 60;
  int64 category = 61;
  repeated int64 tags = 62;
  int64 start_time = 63;
  int64 popularity = 64;
  string popularity_str = 65;
  int64 fcdn_appid = 66;
  bool sell_goods = 68;
  int64 web_count = 69;
  string vertical_cover_uri = 70;
  int64 base_category = 71;
  data.RoomAuthStatus room_auth = 72;
  repeated data.RoomTab room_tabs = 73;
  string introduction = 74;
  data.BurstInfo burst = 75;
  data.RoomHealthScoreInfo health_score = 76;
  bool is_replay = 77;
  string vid = 78;
  int64 group_source = 79;
  int64 lottery_finish_time = 80;
  data.RoomActivityTag activity_tag = 81;
  data.Image portrait_cover = 82;
  data.Image background = 83;
  int64 layout = 84;
  string wait_copy = 85;
  data.Image guide_button = 86;
  string preview_copy = 87;
  bool is_show_inquiry_ball = 88;
  data.MatchInfo match_info = 89;
  bool use_filter = 90;
  int64 gift_msg_style = 91;
  string distance_km = 92;
  string finish_url = 93;
  data.OfficialRoomInfo official_room_info = 94;
  bool is_show_user_card_switch = 95;
  string video_feed_tag = 96;
  string forum_extra_data = 97;
  int64 fansclub_msg_style = 98;
  int64 follow_msg_style = 99;
  int64 share_msg_style = 100;
  int64 room_layout = 101;
  string short_title = 102;
  int64 book_time = 104;
  int64 book_end_time = 105;
  int64 room_audit_status = 106;
  repeated int64 live_distribution = 107;
  data.TVStation tv = 108;
  bool replay = 109;
  string challenge_info = 110;
  int64 like_count = 111;
  int64 search_id = 112;
  string anchor_scheduled_time_text = 113;
  string hot_sentence_info = 114;
  int64 replay_location = 115;
  int64 stream_close_time = 116;
  string content_tag = 117;
  data.Image content_label = 118;
  data.Image operation_label = 119;
  int32 anchor_tab_type = 120;
  data.GameExtra game_extra = 121;
  data.OfficialChannelInfo official_channel = 122;
  string stamps = 123;
  data.CommentBox comment_box = 124;
  int32 business_live = 125;
  bool with_ktv = 126;
  bool with_draw_something = 127;
  int64 webcast_comment_tcs = 128;
  int64 room_tag = 129;
  int32 finish_reason = 131;
  data.RoomCart room_cart = 132;
  string scroll_config = 133;
  string relation_tag = 134;
  int64 owner_device_id = 135;
  int64 auto_cover = 136;
  int64 app_id = 137;
  int64 webcast_sdk_version = 138;
  int64 comment_name_mode = 139;
  string room_create_ab_param = 140;
  int64 pre_enter_time = 141;
  int64 ranklist_audience_type = 142;
  int64 preview_flow_tag = 143;
  data.Image preview_tag_url = 144;
  data.QuizExtra quiz_extra = 145;
  data.LinkerUsers linker_users = 147;
  int64 linkmic_display_type = 148;
  data.AudioBGData AudioRoomBGImage = 149;
  data.LinkerUsers city_top_linker_users = 150;
  data.BorderInfo border_info = 151;
  data.Image city_top_background = 152;
  string city_top_distance = 153;
  int64 live_room_mode = 154;
  data.Bonus bonus = 155;
  bool highlight = 156;
  bool is_official_channel_room = 157;
  repeated int64 fans_group_admin_user_ids = 159;
  data.RoomReplayInfo replay_info = 160;
  int64 official_channel_uid = 161;
  string live_platform_source = 162;
  int64 acquaintance_status = 163;
  data.CommentWallInfo comment_wall_info = 164;
  data.CommentWallPosition comment_wall_position = 165;
  bool live_type_vs_live = 166;
  bool live_type_vs_premiere = 167;
  data.EpisodeExtraInfo episode_extra = 168;
  repeated int32 vs_roles = 169;
  string item_explicit_info = 170;
  data.ShortTouchAuth short_touch_auth = 171;
  int64 sofa_layout = 172;
  data.AnnouncementInfo announcement_info = 173;
  bool is_need_check_list = 174;
  data.LiveStatusInfo live_status_info = 175;
  data.RoomIMInfo im_info = 176;
  data.LabelInfo assist_label = 177;
  data.VerticalTypeInfo vertical_type_info = 179;
  repeated data.FilterWord filter_words = 180;
  data.LabelInfo dynamic_label = 181;
  data.LinkerDetail linker_detail = 182;
  int32 visibility_range = 183;
  data.CornerMarkReach corner_mark_reach = 184;
  data.PreviewExposeData preview_expose = 185;
  data.WelfareProjectInfo welfare_project_info = 186;
  int32 game_room_type = 187;
  data.PaidLiveData paid_live_data = 188;
  data.EasterEggData easter_egg_data = 189;
  bool title_recommend = 190;
  int64 danmaku_detail = 191;
  data.AvatarLiveInfo avatar_live_info = 192;
  data.CircleInfo circle_info = 193;
  int64 has_promotion_games = 194;
  data.Image screenshot_sover = 195;
  data.Appearance appearance = 196;
  data.EcomData ecom_data = 197;
  data.IndustryServiceInfo industry_service_info = 198;
  data.RelevantRecommendation relevant_recommendation = 199;
  data.RoomSpecificSceneTypeInfo scene_type_info = 200;
  data.GameCPData game_cp = 201;
  data.GamePlayData game_play = 202;
  data.UnionLiveInfo union_live_info = 203;
  data.BeautifyInfo beautify_info = 204;
  data.ToolBarData toolbar_data = 205;
  data.AnchorTabLabel anchor_tab_label = 206;
  data.LifeGrouponInfo life_groupon_info = 207;
  data.VipData vip_data = 208;
  int64 toutiao_cover_recommend_level = 209;
  int64 toutiao_title_recommend_level = 210;
  repeated data.UpperRightWidgetData upper_right_widget_data_list = 211;
  data.FeedbackCard live_feedback_card = 212;
  repeated data.LabelInfo assist_label_list = 213;
  data.DesireInfo desire_info = 214;
  data.HotRoomInfo hot_room_info = 215;
  bool with_aggregate_column = 216;
  data.CastScreenData cast_screen_data = 217;
  data.OfficialChannelExtraInfo official_channel_extra = 218;
  string auth_city = 219;
  data.ActivityLiveRecommendConfig activity_live_recommend_config = 220;
  data.RoomChannelData room_channel = 221;
  data.PackMetaInfo pack_meta = 222;
  data.ActivityData activity_data = 223;
  data.LikeDisplayConfig like_display_config = 224;
  data.RoomViewStats room_view_stats = 225;
  data.MatchRoomData match = 226;
  data.CommentaryRoomInfo commentary_room_info = 227;
  int64 redpacket_audience_auth = 228;
  data.MatchChatConfig match_chat_config = 229;
  int64 vs_main_replay_id = 230;
  string screen_capture_sharing_title = 231;
  data.ShareResource share_resource = 232;
  repeated string sharing_music_id_list = 233;
  data.PublicScreenBottomInfo public_screen_bottom_info = 234;
  data.StreamUrl push_stream_hkt = 235;
  data.RoomBasisData basis = 300;
  data.RoomInteractData interact = 301;
  data.RoomReqUserData req_user = 303;
  data.RoomAnchorData anchor_data = 304;
  data.RoomOthersData others = 305;
  data.PicoInfo pico_info = 306;
  data.RoomGameData game_data = 307;
  data.RoomFeedData feed_data = 308;
  data.OpenContentData open_content_data = 309;
  data.ClientComponent client_component_data = 310;
  data.RoomPlatformComponentsData platform_components_data = 311;
}
message RoomPlatformComponentsData {
  data.RoomTitle room_title = 1;
  data.RoomViewStats room_count = 2;
  data.RoomAvator room_avator = 3;
}
message RoomTitle {
  string title = 1;
  string introduction = 2;
  int64 left_tag = 3;
  string left_period = 4;
  string left_toast = 5;
}
message RoomAvator {
  data.Image avatar = 1;
  data.Image authentication_info = 2;
  string nick_name = 3;
  bool has_fans_club = 4;
  int64 follow_status = 5;
  bool invalid_follow_status = 6;
  int64 follow_report_scene = 7;
}
message RoomFeedData {
  data.LabelInfo relation_label = 1;
  data.RoomFeedData.FollowTopAppearance follow_top_appearance = 2;
  data.RoomFeedData.StreamCutPosition cut_position = 3;
  message StreamCutPosition {
    double x1 = 1;
    double y1 = 2;
    double x2 = 3;
    double y2 = 4;
    int32 source_width = 5;
    int32 source_height = 6;
  }
  message FollowTopAppearance {
    int32 style = 1;
    data.RoomFeedData.StreamCutPosition cut_position = 2;
    data.Image image = 3;
  }
}
message PicoInfo {
  int64 pico_live_type = 1;
  string pico_virtual_live_bg_image_uri = 2;
  string pico_create_scene = 3;
  string custom_info = 4;
  string pico_virtual_live_bg_image_digest = 5;
  data.PicoInfo.VirtualLiveBgImages virtual_live_bg_images = 6;
  float pitch = 7;
  int64 client_live_type = 8;
  int32 pico_vr_transfer = 9;
  int64 pico_live_mode = 11;
  message VirtualLiveBgImages {
    data.Image original_image = 1;
    string original_digest = 2;
    bool is_upright = 3;
    repeated data.Image converted_images = 4;
    repeated data.PicoInfo.VirtualLiveBgImages.ConvertedImage converted_list = 5;
    message ConvertedImage {
      int64 quality = 1;
      data.Image image = 2;
      string digest = 3;
    }
  }
}
message OpenContentData {
  data.OpenActivityData open_activity_data = 1;
}
message OpenActivityData {
  data.Image cover_label = 1;
}
message PublicScreenBottomInfo {
  repeated data.PublicScreenBottomInfo.BottomCard bottom_cards = 1;
  message BottomCard {
    string name = 1;
    int64 priority = 2;
    int64 duration = 3;
    string biz_params = 4;
  }
}
message ShareResource {
  data.Image toast_background = 1;
  string ug_share_info = 3;
}
message MatchChatConfig {
  string main_group_icon_url = 1;
  string main_group_background_url = 2;
  string guest_group_icon_url = 3;
  string guest_group_background_url = 4;
  repeated string aggregate_icon_url = 5;
}
message CommentaryRoomInfo {
  int64 user_id = 1;
  data.Image avatar = 2;
  string nickname = 3;
  string title = 4;
  int64 room_id = 5;
}
message RoomBasisData {
  int64 next_ping = 1;
}
message RoomInteractData {
  int64 landscape_comment_style = 1;
  data.EpisodeExtraInfo vs_component_extra = 2;
}
message RoomReqUserData {
  float user_share_room_score = 1;
  int32 enter_user_device_type = 2;
}
message RoomAnchorData {
  string finish_schema = 1;
  data.GameAnchorInfo game_anchor_info = 2;
}
message GameAnchorInfo {
  string category_id = 1;
  bool is_key_anchor = 2;
}
message RoomOthersData {
  data.DecotationDetail deco_detail = 1;
  data.MorePanelData more_panel_info = 2;
  data.AppointmentData appointment_info = 3;
  data.WebSkinData web_skin = 4;
  data.WebProgramme programme = 5;
  data.LiveMatrixInfo live_matrix_info = 6;
  data.GiftPanelTopperTray gift_panel_topper_tray = 8;
  data.EnterGiftAnimation enter_gift_animation = 9;
}
message WebLivePortConfig {
  int32 strategy_type = 1;
  bool use_config_duration = 2;
  string pause_monitor_duration = 3;
}
message WebSkinData {
  bool enable_skin = 1;
}
message WebProgramme {
  bool enable_programme = 1;
}
message LiveMatrixInfo {
  int64 id = 1;
  string name = 2;
}
message RoomGameData {
  data.RoomGameDataChannelConfig room_game_data_channel_config = 1;
}
message AppointmentData {
  int64 appointment_id = 1;
  bool is_subscribe = 2;
}
message MorePanelData {
  int32 load_strategy = 1;
}
message ActivityData {
  bool xg_play = 1;
  data.MatchRoomData match = 2;
}
message CastScreenData {
  string show_text = 1;
  repeated int64 allow_list = 2;
  int32 sdk_version = 3;
  data.CastOttPermission permission = 4;
  int32 force_cast_only = 5;
}
message CastOttPermission {
  bool enable = 1;
  string failure_toast = 2;
}
message DesireInfo {
  int64 desire_id = 1;
  string desire_id_str = 2;
}
message FeedbackCard {
  string title = 1;
  int64 feedback_id = 2;
  repeated data.FeedbackCard.Question question = 3;
  data.FeedbackCard.Condition condition = 4;
  int64 room_id = 5;
  data.Room room_data = 6;
  string negative_text = 7;
  data.Image bgm = 8;
  int32 feedback_type = 9;
  int32 inflow_feedback_type = 10;
  message Option {
    string key = 1;
    string text = 2;
    int64 sub_question_id = 3;
    bool negative = 4;
    string toast_text = 5;
    int32 tendency = 6;
  }
  message RoomCardStruct {
    data.Room data = 1;
    string title = 2;
    string sub_title = 3;
  }
  message Question {
    string question_key = 1;
    string question_text = 2;
    int64 type = 3;
    repeated data.FeedbackCard.Option options = 4;
    int64 question_id = 5;
    repeated data.FeedbackCard.RoomCardStruct room_cards = 6;
  }
  message Condition {
    int64 from_time = 1;
    int64 to_time = 2;
    repeated int64 action_ids = 3;
    int64 action_type = 4;
    int64 preview_time = 5;
  }
}
message UpperRightWidgetData {
  string name = 1;
  int32 widget_type = 2;
  string extra = 3;
  int32 priority = 4;
}
message VipData {
  int32 vip_room = 1;
}
message AnchorTabLabel {
  string content = 1;
  data.Image label = 2;
  data.Image icon = 3;
  int32 style = 4;
  int32 type = 5;
  string key = 6;
  string accessible_content = 7;
}
message BeautifyInfo {
  bool use_filter = 1;
  bool commerce_use_filter = 2;
}
message UnionLiveInfo {
  repeated data.UnionLiveInfo.GuestAnchor guest_anchors = 1;
  string avatar_description = 2;
  bool fixed_sort = 3;
  string tag = 4;
  int32 type = 5;
  message GuestAnchor {
    data.User user = 1;
    string tag = 2;
    int32 status = 3;
  }
}
message RoomSpecificSceneTypeInfo {
  bool is_union_live_room = 1;
  bool is_life = 2;
  int32 is_protected_room = 3;
  int32 is_lasted_goods_room = 4;
  int32 is_desire_room = 5;
  bool commentary_type = 6;
}
message RelevantRecommendation {
  int32 relevant_type = 1;
  int32 bottom_bar_category = 2;
  data.Image icon = 3;
  string bar_text_prefix = 4;
  string bar_text_postfix = 5;
  data.RelevantRecommendation.HighLightInfo high_light_info = 6;
  data.RelevantRecommendation.EcomInfo ecom_info = 7;
  data.RelevantRecommendation.VsInfo vs_info = 8;
  data.RelevantRecommendation.WhiteCategoryInfo white_category_info = 9;
  message HighLightInfo {
    string main_url = 1;
    string bak_url = 2;
  }
  message EcomInfo {
    int64 product_id = 1;
    string product_name = 2;
  }
  message Episode {
    int64 episode_id = 1;
    string episode_name = 2;
    data.Image episode_cover = 3;
    string current_period = 4;
    int64 season_id = 5;
    string item_id = 6;
  }
  message VsInfo {
    repeated data.RelevantRecommendation.Episode episodes = 1;
  }
  message WhiteCategoryInfo {
    int64 first_level_tag_id = 1;
  }
}
message IndustryServiceInfo {
  bool entrance_open = 1;
  data.Image icon_image = 2;
  data.IndustryServiceInfo.ConsultInfo consult_info = 3;
  message ConsultInfo {
    string biz_info = 1;
    int32 consult_role = 2;
  }
}
message EcomData {
  data.EcomLiveCard live_card = 1;
  data.EcomPop pop = 2;
  data.EcomGoodsCard goods_card = 3;
  repeated data.RedsShowInfo reds_show_infos = 4;
  data.RoomCartV2 room_cart_v2 = 5;
}
message AvatarLiveInfo {
  string type = 1;
  string text = 2;
  int32 text_size = 3;
  data.Image image = 4;
}
message WelfareProjectInfo {
  int64 project_id = 1;
  int64 show_frequency = 2;
  string container_card_url = 3;
  string welfare_detail_page_url = 4;
  string project_id_str = 5;
}
message CornerMarkReach {
  bool need_reach = 1;
  int64 duration = 2;
  int64 elem_type = 3;
}
message VerticalTypeInfo {
  string name = 1;
  int64 tab_type = 2;
  int64 tag_id = 3;
  bool is_sub_tag = 4;
  data.Image icon = 5;
  int64 valid_time = 6;
  int64 priority = 7;
  string extra = 8;
  string event_extra = 9;
}
message FilterWord {
  string id = 1;
  bool is_selected = 2;
  string name = 3;
}
message LabelInfo {
  int64 label_type = 1;
  int64 display_type = 2;
  data.SpliceLabel splice_label = 3;
  data.Image whole_label = 4;
  string extra = 5;
  data.ProfilePicSpliceLabel profile_pic_splice_label = 6;
}
message VSLinkInfo {
  string title = 1;
  string tab_title = 2;
  repeated data.VSLinkNode rooms = 3;
  int32 pattern = 4;
}
message VSLinkNode {
  int64 room_id = 1;
  string room_id_str = 2;
  string title = 3;
  int64 live_room_mode = 4;
  data.User owner = 5;
}
message SpliceLabel {
  string text = 1;
  string text_color = 2;
  data.Image background_image = 3;
  data.Image icon_image = 4;
  string background_color = 5;
}
message ProfilePicSpliceLabel {
  repeated data.LabelProfileItem profile_list = 1;
}
message LabelProfileItem {
  int64 user_id = 1;
  string nick_name = 2;
  data.Image profile_pic = 3;
}
message LiveStatusInfo {
  int32 live_status = 1;
  data.User live_user = 2;
  string preview_text = 4;
}
message ShortTouchAuth {
  int32 commerce_lottery = 1;
}
message EpisodeMod {
  int32 episode_stage = 1;
  int32 episode_type = 2;
  int32 episode_sub_type = 3;
  int32 episode_record_type = 4;
}
message ToolbarItemConfig {
  int32 toolbar_type = 1;
  data.Image icon = 2;
  string jump_schema = 3;
  int32 display_type = 4;
  data.Image dynamic_icon = 5;
  data.Image icon_vertical = 6;
  data.Image dynamic_bottom_icon = 7;
  data.Image bottom_icon = 8;
  repeated data.Toast toast_list = 9;
  string extra = 10;
}
message Toast {
  int64 start_time = 1;
  int64 end_time = 2;
  string content = 3;
  string schema = 4;
  string toast_id = 5;
}
message WatchInfo {
  string desc = 1;
  string count = 2;
  string count_with_backup = 3;
  int32 real_count = 4;
  int64 real_count_int64 = 5;
  int32 live_count_display_type = 6;
  int64 display_type_start_time = 7;
  string format_count = 8;
}
message EpisodeExtraInfo {
  data.EpisodeMod episode_mod = 1;
  string current_period = 2;
  string title = 3;
  string episode_list_h5 = 4;
  data.WatchInfo watch_info = 5;
  int64 episode_id = 6;
  string episode_id_str = 7;
  string item_id = 8;
  string selection_url = 9;
  string relation_place_text = 10;
  repeated string operation_place_text_list = 11;
  repeated data.ToolbarItemConfig toolbar_list = 12;
  bool collected = 13;
  int64 season_id = 14;
  string finish_url = 15;
  string release_time = 16;
  int64 watch_period = 17;
  int64 latest_period = 18;
  string show_name = 19;
  int32 current_period_raw = 20;
  int32 video_code = 21;
  string season_id_str = 22;
  string watch_pv_raw = 23;
  int64 next_special_episode_id = 24;
  data.Image cover = 25;
  data.Image cover_vertical = 26;
  int32 style = 27;
  data.EpisodePremierePlay play_control = 28;
  data.EpisodePreviewImage preview_image = 29;
  data.VSGiftPannel gift_pannel = 30;
  data.VSPannelIcon pannel_icon = 31;
  repeated data.ToolbarItemConfig pannel_toolbar = 32;
  data.EpisodePreviewBottom preview_bottom = 33;
  string draw_sub_title = 34;
  data.Image season_cover_vertical = 35;
  repeated data.VSCameraInfo camera_infos = 36;
  int64 default_camera_id = 37;
  int64 default_camera_id_str = 38;
  string default_camera_id_str_v2 = 39;
  data.VSCameraInfo priority_camera = 40;
  string multi_season_tag = 41;
  data.Image preview_background = 42;
  data.Image background = 43;
  data.EpisodeMod mod = 44;
  data.Image item_comment_icon = 45;
  data.VSWatermark vs_watermark = 46;
  data.VSItemComment item_comment = 47;
  string season_type_name = 48;
  data.VSBar vs_bar = 49;
  data.WatchInfo season_watch_info = 50;
  data.VSLinkInfo link_room_info = 51;
  data.CommentConfig comment_config = 52;
  string camera_infos_table_title = 53;
  int32 episode_status = 54;
  data.MatchRoomInfo match_room_info = 55;
  data.MultiCameraBasicInfo multi_camera_basic_info = 56;
  data.SharePosterInfo share_poster_info = 57;
  data.VSPremiereToast premiere_toast = 58;
  string preview_bottom_text = 59;
  repeated data.BusinessConfigure business_configure = 60;
  string public_screen_color = 61;
  string chat_tray_color = 62;
  data.MultiTab multi_tab = 63;
  data.Image main_camera_cover = 64;
  string main_camera_title = 65;
  bool is_interact_config_exist = 67;
  data.MainCameraMatchInfo main_camera_match_info = 68;
  int64 group_id = 69;
  data.VSConfigDrawer vs_config_drawer = 70;
  data.TitleIcon title_icon = 71;
  string group_id_str = 72;
}
message TitleIcon {
  data.Image icon = 1;
  int32 size_type = 2;
}
message VSConfigDrawer {
  data.MatchDrawer drawer = 1;
  data.Image drawer_label = 2;
  data.Image drawer_background = 3;
}
message VSPremiereToast {
  string left_top_toast = 1;
  string player_toast = 2;
  string player_top_toast = 3;
  data.Image icon = 4;
}
message CommentConfig {
  repeated data.CommentColor comment_colors = 1;
  repeated data.CommentRole comment_roles = 2;
  string role_suffix = 3;
  string role_title = 4;
  string unlock_role_tip = 5;
  repeated data.CommentMedal comment_medals = 6;
  string medal_title = 7;
}
message CommentMedal {
  string name = 1;
  data.Image image = 2;
  data.Image keyboard_image = 4;
}
message CommentColor {
  string name = 1;
  string color = 2;
}
message CommentRole {
  int64 role_id = 1;
  string name = 2;
  data.Image avatar = 3;
}
message Bonus {
  int64 bonus_type = 1;
  data.BonusAuthor author = 2;
  string title = 3;
  string sub_title = 4;
  string text = 5;
  string style = 6;
  data.BonusCommerce commerce_info = 7;
  string open_url = 8;
  string token = 9;
  int64 source = 10;
  data.Image label = 11;
  int64 scene_id = 12;
  bool maybe_carp = 13;
  int64 countdown_second = 14;
}
message BonusCommerce {
  int64 id = 1;
}
message BonusAuthor {
  int64 id = 1;
  string name = 2;
  data.Image avatar_larger = 3;
  data.Image avatar_thumb = 4;
  data.Image avatar_medium = 5;
}
message BorderInfo {
  int64 border_type = 1;
  data.StaticBorderInfo static_border = 2;
  data.DynamicBorderInfo dynamic_border = 3;
  int64 duration = 4;
}
message StaticBorderInfo {
  data.Image top = 1;
  data.Image bottom = 2;
  data.Image left = 3;
  data.Image right = 4;
}
message DynamicBorderInfo {
  int64 id = 1;
}
message LinkerUsers {
  int64 count = 1;
  repeated data.User users_info = 2;
}
message OfficialChannelInfo {
  data.User channel_user = 1;
  string channel_name = 2;
  string channel_intro = 3;
  int64 end_timestamp = 4;
  int64 forbidden_before_end = 5;
  int32 current_show_id = 6;
  int64 max_enter_time = 7;
  int64 max_next_time = 8;
  bool host_permission = 10;
  int64 backup_room_id = 11;
  data.User living_user = 12;
  bool host_can_accept_gift = 13;
  repeated int64 host_uids = 14;
  string backup_room_id_str = 15;
  bool enable_host = 16;
}
message OfficialChannelExtraInfo {
  int64 show_start_ts = 1;
  string showlist_schema = 2;
  int64 showlist_id = 3;
  string showlist_name = 4;
}
message MatchInfo {
  data.MatchSkinInfo skin = 1;
}
message MatchSkinInfo {
  data.MatchSkinInfo.FollowBtnSkin unfollow_skin = 1;
  data.MatchSkinInfo.FollowBtnSkin followed_skin = 2;
  string tab_selected_color = 3;
  string tab_unselected_color = 4;
  string comment_place_holder_color = 5;
  string anchor_name_color = 6;
  string anchor_info_color = 7;
  data.Image user_banner_image = 8;
  data.Image tool_bar_image = 9;
  string comment_place_holder_bg_color = 10;
  data.Image share_icon = 11;
  message FollowBtnSkin {
    string left_color = 1;
    string right_color = 2;
    string font_color = 3;
  }
}
message RoomActivityTag {
  int32 activity_type = 1;
  string name = 2;
  string url = 3;
  string extra = 4;
  data.Image icon = 5;
}
message RoomAuthStatus {
  bool Chat = 1;
  bool Danmaku = 2;
  bool Gift = 3;
  bool LuckMoney = 4;
  bool Digg = 5;
  bool RoomContributor = 7;
  bool Props = 8;
  bool UserCard = 9;
  bool POI = 10;
  int64 MoreAnchor = 11;
  int64 Banner = 12;
  int64 Share = 13;
  int64 UserCorner = 14;
  int64 Landscape = 15;
  int64 LandscapeChat = 16;
  int64 PublicScreen = 17;
  int64 GiftAnchorMt = 18;
  int64 RecordScreen = 19;
  int64 DonationSticker = 20;
  int64 HourRank = 21;
  int64 CommerceCard = 22;
  int64 AudioChat = 23;
  int64 DanmakuDefault = 24;
  int64 KtvOrderSong = 25;
  int64 SelectionAlbum = 26;
  int64 Like = 27;
  int64 MultiplierPlayback = 28;
  int64 DownloadVideo = 29;
  int64 Collect = 30;
  int64 TimedShutdown = 31;
  int64 Seek = 32;
  int64 Denounce = 33;
  int64 Dislike = 34;
  int64 OnlyTa = 35;
  int64 CastScreen = 36;
  int64 CommentWall = 37;
  int64 BulletStyle = 38;
  int64 ShowGamePlugin = 39;
  int64 VSGift = 40;
  int64 VSTopic = 41;
  int64 VSRank = 42;
  int64 AdminCommentWall = 43;
  int64 CommerceComponent = 44;
  int64 DouPlus = 45;
  int64 GamePointsPlaying = 46;
  int64 Poster = 47;
  int64 Highlights = 48;
  int64 TypingCommentState = 49;
  int64 StrokeUpDownGuide = 50;
  int64 UpRightStatsFloatingLayer = 51;
  int64 CastScreenExplicit = 52;
  int64 Selection = 53;
  int64 IndustryService = 54;
  int64 VerticalRank = 55;
  int64 EnterEffects = 56;
  int64 FansClub = 57;
  int64 EmojiOutside = 58;
  int64 CanSellTicket = 59;
  int64 DouPlusPopularityGem = 60;
  int64 MissionCenter = 61;
  int64 ExpandScreen = 62;
  int64 FansGroup = 63;
  int64 Topic = 64;
  int64 AnchorMission = 65;
  int64 Teleprompter = 66;
  int64 ChatDynamicSlideSpeed = 67;
  int64 SmallWindowDisplay = 68;
  int64 MessageDispatch = 69;
  int64 RoomChannel = 70;
  int64 ChatDispatch = 71;
  int64 LinkmicGuestLike = 72;
  int64 MediaLinkmic = 73;
  int64 VideoShare = 74;
  int64 ChatGuideEmoji = 75;
  int64 ChatGuideImage = 76;
  int64 PCPlay = 77;
  int64 PadPlay = 78;
  int64 LongTouch = 79;
  int64 FirstFeedHistChat = 80;
  int64 MoreHistChat = 81;
  int64 WordAssociation = 82;
  int64 LandscapeScreenCapture = 83;
  int64 LandscapeScreenRecording = 84;
  int64 ScreenProjectionBarrage = 85;
  int64 SmallWindowPlayer = 86;
  int64 ChatOperate = 87;
  int64 EcomFansClub = 88;
  int64 AudioChatTotext = 89;
  int64 CommonCard = 90;
  int64 ShortTouch = 91;
  int64 HostTeamChannel = 92;
  int64 LandscapeChatDynamicSlideSpeed = 93;
  int64 HostTeam = 94;
  int64 AnchorHotMessageAggregated = 95;
  int64 AnchorColdMessageTiled = 96;
  int64 ScreenBottomInfo = 97;
  int64 PreviewHotCommentSwitch = 98;
  int64 RoomWidget = 99;
  data.RoomAuthStatus.RoomAuthOffReasons OffReason = 100;
  data.RoomAuthStatus.RoomAuthSpecialStyle SpecialStyle = 101;
  int64 PanelECService = 102;
  int64 FixedChat = 103;
  int64 LandscapeGift = 104;
  int64 HotChatTray = 105;
  int64 ItemShare = 106;
  int64 ShortTouchTempState = 107;
  int64 StickyMessage = 108;
  int64 ProjectionBtn = 109;
  int64 ChatDynamicSlideSpeedAnchor = 110;
  int64 PosterCache = 111;
  int64 MediaHistoryMessage = 112;
  int64 ToolbarBubble = 113;
  int64 ImHeatValue = 114;
  int64 InteractiveComponent = 115;
  int64 ChatReply = 116;
  int64 ChatMention = 117;
  int64 FrequentlyChat = 118;
  int64 StreamAdaptation = 119;
  int64 VideoAmplificationType = 120;
  int64 VsCommentBar = 200;
  int64 VsWelcomeDanmaku = 201;
  int64 VsFansClub = 202;
  int64 VsExtensionEnableFollow = 203;
  int64 VsDouPlus = 204;
  int64 QuizGamePointsPlaying = 205;
  int64 UgcVSReplayDelete = 206;
  int64 UgcVsReplayVisibility = 207;
  message RoomAuthOffReasons {
    string gift = 1;
  }
  message RoomAuthSpecialStyle {
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style Chat = 1;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style Gift = 2;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style RoomContributor = 3;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style Like = 4;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style RoomChannel = 5;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style Share = 6;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style CastScreenAuth = 7;
    data.RoomAuthStatus.RoomAuthSpecialStyle.Style Landscape = 8;
    message Style {
      int32 UnableStyle = 1;
      string Content = 2;
      int32 OffType = 3;
      int32 AnchorSwitch = 4;
      string SwitchStatusTipMsg = 5;
      string SwitchStatusAnchorTipMsg = 6;
      int32 AnchorSwitchForPaidLive = 7;
      string ContentForPaidLive = 8;
    }
  }
}
message MoreEntrance {
  string Title = 1;
  int64 Type = 2;
}
message RoomTab {
  int32 tab_type = 1;
  string tab_name = 2;
  string tab_url = 3;
}
message RoomExtra {
  bool is_sandbox = 1;
  data.RegionRestriction enter_region_restriction = 2;
  data.RegionMatch enter_region_match = 3;
  data.SafeReason filter_with_no_context = 4;
  int64 xigua_uid = 5;
  int64 limit_strategy = 6;
  string limit_appid = 7;
  int32 geo_block = 8;
  int32 vr_type = 9;
  bool is_virtual_anchor = 10;
  string create_scene = 11;
  bool realtime_replay_enabled = 12;
  int64 realtime_playback_shift = 13;
  int64 realtime_playback_start_shift = 14;
  repeated data.StreamUrl.LiveCoreSDKData.PullData.Options.Quality realtime_playback_qualities = 15;
}
message SafeReason {
  int32 safe_type = 1;
}
message RegionRestriction {
  int64 type = 1;
  repeated string white_list = 2;
  repeated string black_list = 3;
}
message RegionMatch {
  int64 type = 1;
  repeated string allow_list = 2;
  repeated string deny_list = 3;
}
message StreamUrl {
  int64 provider = 1;
  int64 id = 2;
  string id_str = 3;
  string default_resolution = 5;
  data.StreamUrl.StreamUrlExtra extra = 6;
  string rtmp_push_url = 7;
  string rtmp_pull_url = 8;
  repeated string candidate_resolution = 10;
  string hls_pull_url = 11;
  string hls_pull_url_params = 12;
  string rtmp_pull_url_params = 13;
  string rtmp_push_url_params = 15;
  repeated string push_urls = 16;
  data.StreamUrl.LiveCoreSDKData live_core_sdk_data = 17;
  repeated string complete_push_urls = 19;
  int32 stream_control_type = 20;
  int32 stream_orientation = 21;
  int32 push_stream_type = 22;
  data.StreamUrl.PlaySetting play = 24;
  int32 vr_type = 26;
  message StreamUrlExtra {
    int64 height = 1;
    int64 width = 2;
    int64 fps = 3;
    int64 max_bitrate = 4;
    int64 min_bitrate = 5;
    int64 default_bitrate = 6;
    int64 bitrate_adapt_strategy = 7;
    int64 anchor_interact_profile = 8;
    int64 audience_interact_profile = 9;
    bool hardware_encode = 10;
    int64 video_profile = 12;
    data.StreamUrl.StreamUrlExtra.SuperResolution super_resolution = 14;
    bool h265_enable = 15;
    int64 gop_sec = 16;
    bool bframe_enable = 17;
    bool roi = 18;
    bool sw_roi = 19;
    bool bytevc1_enable = 20;
    data.StreamUrl.StreamUrlExtra.AnchorClientInfo anchor_client_info = 21;
    message SuperResolution {
      bool enable = 1;
      int64 strength = 2;
      bool antialiasing = 3;
    }
    message AnchorClientInfo {
      string custom_info = 1;
    }
  }
  message LiveCoreSDKData {
    data.StreamUrl.LiveCoreSDKData.PullData pull_data = 1;
    data.StreamUrl.LiveCoreSDKData.PushData push_data = 2;
    string size = 3;
    message PullData {
      string stream_data = 1;
      data.StreamUrl.LiveCoreSDKData.PullData.Options options = 2;
      int64 version = 3;
      int32 kind = 5;
      data.StreamUrl.LiveCoreSDKData.PullData.Extension extension = 6;
      repeated data.StreamUrl.LiveCoreSDKData.PullData.PlayInfo Hls = 7;
      repeated data.StreamUrl.LiveCoreSDKData.PullData.PlayInfo Flv = 8;
      string codec = 9;
      data.StreamUrl.LiveCoreSDKData.PullData.Display display = 10;
      string compensatory_data = 11;
      message Options {
        data.StreamUrl.LiveCoreSDKData.PullData.Options.Quality default_quality = 1;
        repeated data.StreamUrl.LiveCoreSDKData.PullData.Options.Quality qualities = 2;
        bool vpass_default = 3;
        message Quality {
          string name = 1;
          string sdk_key = 2;
          string v_codec = 3;
          string resolution = 4;
          int32 level = 5;
          int32 v_bit_rate = 6;
          string additional_content = 7;
          int32 fps = 8;
          int32 disable = 9;
        }
      }
      message Clip {
        float x = 1;
        float y = 2;
        float w = 3;
        float h = 4;
      }
      message CameraHorizontalPosition {
        int32 anchor = 1;
      }
      message Extension {
        data.StreamUrl.LiveCoreSDKData.PullData.Clip game_clip = 1;
        data.StreamUrl.LiveCoreSDKData.PullData.Clip camera_clip = 2;
        int32 camera_hidden = 3;
        string ts = 4;
        int64 refresh = 5;
        int32 display_mode = 6;
        int32 game_hidden = 7;
        string game_room_id = 8;
        int32 layout = 9;
        data.StreamUrl.LiveCoreSDKData.PullData.Clip camera_clip_custom = 10;
        int32 camera_vertical_type = 11;
        data.StreamUrl.LiveCoreSDKData.PullData.CameraHorizontalPosition camera_horizontal_position = 12;
        int32 camera_horizontal_hidden = 13;
      }
      message PlayInfo {
        string url = 1;
        string quality_name = 2;
        string params = 3;
      }
      message Display {
        int64 scale_width = 1;
        int64 scale_height = 2;
      }
    }
    message PushData {
      int32 push_stream_level = 2;
      bool pre_schedule = 3;
      string rtmp_push_url = 4;
      string push_params = 5;
      int32 kind = 6;
      int64 stream_id = 7;
      string stream_id_str = 8;
      message ResolutionParams {
        int64 width = 1;
        int64 height = 2;
        int64 default_bitrate = 3;
        int64 min_bitrate = 4;
        int64 max_bitrate = 5;
        int64 fps = 6;
      }
    }
  }
  message PlaySetting {
    string horizontal = 1;
    string vertical = 2;
  }
}
message VSCameraInfo {
  int64 camera_id = 1;
  string camera_id_str = 2;
  string title = 3;
  data.Image cover = 4;
  data.Image cover_vertical = 5;
  data.StreamUrl stream_info = 6;
  int64 start_time = 7;
  int64 end_time = 8;
  int32 style = 9;
  data.RoomAuthStatus camera_room_auth = 10;
  int32 vr_type = 11;
  data.CameraPaidInfo camera_paid_info = 12;
  data.CameraMatchInfo camera_match_info = 13;
  int64 group_id = 14;
  int32 camera_type = 15;
  data.Image label = 16;
  int64 pcu = 17;
  bool is_subscribed = 18;
  string group_id_str = 19;
}
message CameraPaidInfo {
  int32 max_duration = 1;
  int64 duration = 2;
  data.CameraPaidInfo.PriceInfo price_info = 3;
  data.PaidLiveBaseInfo paid_live_base_info = 4;
  data.CameraPaidInfo.PaidLiveBizExtra paid_live_biz_extra = 5;
  data.AsyncAuthData async_auth_data = 6;
  message PriceInfo {
    string amount = 1;
    string currency = 2;
  }
  message PaidLiveBizExtra {
    string ticket_panel_six_jump_url = 1;
    bool is_replay = 2;
    string paid_conversion_jump_url = 3;
  }
}
message CameraMatchInfo {
  int64 match_id = 1;
  int64 content_id = 2;
  repeated int64 event_ids = 3;
  repeated int64 hide_tab_ids = 4;
  string match_id_str = 5;
}
message PaidLiveBaseInfo {
  int32 paid_live_type = 1;
  int64 ticket_session_id = 2;
  int64 ticket_price = 3;
  int32 view_right = 4;
  int32 delivery = 5;
}
message LinkMic {
  int64 channel_id = 1;
  data.LinkMic.LinkMicChannelInfo channel_info = 2;
  repeated data.LinkMic.LinkMicBattleScore battle_scores = 3;
  data.LinkMic.LinkMicBattleSetting battle_settings = 4;
  int64 rival_anchor_id = 5;
  int64 linkmic_anchor_count = 6;
  message LinkMicChannelInfo {
    int64 layout = 1;
    int64 vendor = 2;
    int64 dimension = 3;
  }
  message LinkMicBattleScore {
    int64 user_id = 1;
    int64 score = 2;
  }
  message LinkMicBattleSetting {
    int64 channel_id = 1;
    int64 duration = 2;
    int64 start_time = 3;
    int64 start_time_ms = 4;
    string theme = 5;
    int64 finished = 6;
    int64 battle_id = 7;
    int64 match_type = 8;
    int64 play_mode = 9;
    int64 team_mode = 10;
    int64 activity_mode = 11;
  }
}
message Reservation {
  int64 appointment_id = 1;
  int64 anchor_id = 2;
  int64 room_id = 3;
  int64 start_time = 4;
  int64 end_time = 5;
  repeated int64 btn_rect = 6;
  string btn_color = 7;
  bool is_reserved = 8;
}
message DecotationDetail {
  data.Decoration text_decoration = 1;
  data.Decoration image_decoration = 2;
}
message Decoration {
  int64 id = 1;
  data.Image image = 2;
  int64 type = 3;
  repeated int64 input_rect = 4;
  int64 text_size = 5;
  string text_color = 6;
  string content = 7;
  int64 max_length = 8;
  int64 status = 9;
  int64 h = 10;
  int64 x = 11;
  int64 w = 12;
  int64 y = 13;
  int64 kind = 14;
  int64 sub_type = 15;
  data.Reservation reservation = 16;
  data.Image nine_patch_image = 17;
  repeated int64 text_special_effects = 18;
  int64 text_image_adjustable_start_position = 19;
  int64 text_image_adjustable_end_position = 20;
  data.DecorationFontConfig text_font_config = 21;
  string audit_text_color = 22;
}
message DecorationFontConfig {
  int64 FontID = 1;
  string DownloadUrl = 2;
  int64 Status = 3;
  string font_name = 4;
}
message RoomStats {
  int64 id = 1;
  string id_str = 2;
  int64 fan_ticket = 3;
  int64 money = 4;
  int64 total_user = 5;
  int64 gift_uv_count = 6;
  int64 follow_count = 7;
  data.RoomStats.UserCountComposition user_count_composition = 8;
  int64 watermelon = 9;
  int64 digg_count = 10;
  int64 enter_count = 11;
  string dou_plus_promotion = 12;
  string total_user_desp = 13;
  int64 like_count = 14;
  string total_user_str = 15;
  string user_count_str = 16;
  int64 comment_count = 17;
  int64 welfare_donation_amount = 18;
  string up_right_stats_str = 19;
  string up_right_stats_str_complete = 20;
  message UserCountComposition {
    double city = 1;
    double video_detail = 2;
    double my_follow = 3;
    double other = 4;
  }
}
message RoomViewStats {
  bool is_hidden = 1;
  string display_short = 2;
  string display_middle = 3;
  string display_long = 4;
  int64 display_value = 5;
  int64 display_version = 6;
  bool incremental = 7;
  int32 display_type = 8;
  string display_short_anchor = 9;
  string display_middle_anchor = 10;
  string display_long_anchor = 11;
}
message TopFan {
  int64 fan_ticket = 1;
  data.User user = 2;
}
message RoomUserAttr {
  int64 room_id = 1;
  string room_id_str = 2;
  int64 silence_flag = 3;
  int64 admin_flag = 4;
  int64 rank = 5;
}
message BurstInfo {
  int64 burst_time_remain_seconds = 1;
  int64 multiple = 2;
  int64 property_definition_id = 3;
  data.Image property_icon = 4;
}
message RoomHealthScoreInfo {
  double score = 1;
  string bubble_message = 2;
  string jump_url = 3;
}
message TVStation {
  bool is_idle = 1;
  string state_desc = 2;
}
message CommentBox {
  data.Image icon = 1;
  string placeholder = 2;
}
message RoomCartV2 {
  int32 show_cart = 1;
}
message RoomCart {
  bool contain_cart = 1;
  int64 total = 2;
  int64 flash_total = 3;
  string cart_icon = 4;
  int32 show_cart = 5;
  data.CartVertical vertical = 6;
  data.CartHorizontal horizontal = 7;
  data.GlobalCustomIcons global_custom_icons = 8;
}
message CartVertical {
  bool allow_show_cart = 1;
}
message CartHorizontal {
  bool allow_show_cart = 1;
}
message GlobalCustomIcons {
  string static_icon_url = 1;
  string animated_icon_url = 2;
  string animated_common_icon_url = 3;
}
message ShortTouchBigCard {
  string big_card_url = 1;
  int32 container_type = 2;
  int32 width = 3;
  int32 height = 4;
  int32 duration = 5;
}
message TextViewModel {
  string text = 1;
  string text_color = 2;
  int32 text_size = 3;
  string bg_color = 4;
}
message ShortTouchBubble {
  string bubble_id = 1;
  data.TextViewModel ui_model = 2;
  int32 strategy = 3;
  int32 duration = 4;
}
message ShortTouchArea {
  int32 type = 1;
  uint32 priority = 2;
  int64 min_webcast_sdk_version = 3;
  int32 short_touch_type = 4;
  data.ShortTouchInfo short_touch_info = 5;
  data.ShortTouchBigCard short_touch_big_card = 6;
  string container_payload = 7;
  int32 load_type = 8;
  data.ShortTouchBubble bubble_params = 9;
  string name = 10;
}
message ShortTouchImageLayers {
  repeated data.ShortTouchImageLayers.Layer layers = 1;
  int32 base_width = 2;
  int32 base_height = 3;
  message Layer {
    string url = 1;
    int32 x = 2;
    int32 y = 3;
    int32 width = 4;
    int32 height = 5;
    int32 radius = 6;
  }
}
message ShortTouchInfo {
  string short_touch_url = 1;
  string short_touch_fallback_url = 2;
  int32 container_type = 3;
  uint32 width = 4;
  uint32 height = 5;
  string img_url = 6;
  string jump_schema = 7;
  int32 show_animation = 8;
  int32 animation_type = 9;
  repeated string sub_item_list = 10;
  data.ShortTouchImageLayers img_layers = 11;
  uint32 animation_quota = 12;
  string accessible_name = 13;
}
message QuizExtra {
  string quiz_infos = 1;
}
message AudioSpeakingImageList {
  data.AudioSpeakingImageList.SpeakingImage male_speaking_image = 1;
  data.AudioSpeakingImageList.SpeakingImage female_speaking_image = 2;
  data.AudioSpeakingImageList.SpeakingImage unknown_speaking_image = 3;
  message SpeakingImage {
    data.Image speaking_low_image = 1;
    data.Image speaking_default_image = 2;
    data.Image speaking_high_image = 3;
  }
}
message ShowArea {
  int64 x = 1;
  int64 y = 2;
  int64 h = 3;
  int64 w = 4;
}
message AnimatedBgInfo {
  data.ShowArea showArea = 1;
  string fileFormat = 2;
  data.Image animatedBg = 3;
}
message AudioBGData {
  int64 id = 1;
  string image_uri = 2;
  int32 img_type = 3;
  data.Image image = 4;
  data.Image imageThumbnail = 5;
  data.Image imageAnimatedBG = 6;
  data.Image imageNormalAvatar = 7;
  data.Image imageStartupAvatar = 8;
  data.Image imageChatJoinIcon = 9;
  data.Image imageStaticBG = 10;
  data.AudioSpeakingImageList speakingImageList = 11;
  string status_color_value = 12;
  string public_screen_color_value = 13;
  int32 time_limit = 14;
  int32 bg_type = 15;
  string empty_start_color = 16;
  string empty_end_color = 17;
  data.Image imageColdBG = 18;
  string micBGColorValue = 19;
  repeated data.Image iconMicNormals = 20;
  data.Image iconMicLock = 21;
  string colorMicText = 22;
  string colorMicLine = 23;
  string colorMicBG = 24;
  string themeLabel = 25;
  int32 bgStatus = 26;
  data.AnimatedBgInfo animateInfo = 27;
  string idStr = 28;
  int32 play_mode = 29;
  string theme_tag = 30;
  int64 start_time = 31;
  int64 end_time = 32;
  int32 format_type = 33;
  data.AudioSpeakingImageList speaking_image_v2 = 34;
}
message RoomReplayInfo {
  int64 replay_duration = 1;
  string replay_url = 2;
  string content_uniq_id = 3;
}
message CommentWallInfo {
  string content = 1;
  int64 id = 2;
  int64 comment_msg_id = 3;
  int64 commenter_id = 4;
  string commenter_nickname = 5;
  int64 event_time = 6;
  int64 msg_time = 7;
  int64 end_time = 8;
  int32 countdown_style = 9;
  int64 operator_id = 10;
  string operator_nickname = 11;
}
message CommentWallPosition {
  double x = 1;
  double y = 2;
  int64 event_time = 3;
}
message AnnouncementInfo {
  string scheduled_time_text = 1;
  string content = 2;
  bool subscribed = 3;
  int64 appointment_id = 4;
  int32 scheduled_time = 5;
  int32 scheduled_date = 6;
  repeated int32 scheduled_weekdays = 7;
}
message RoomIMInfo {
  repeated string welcome_messages = 1;
  string room_tag = 2;
  string hide_gift_message = 3;
}
message PropsBGData {
  string image_uri = 1;
  int32 img_type = 2;
  data.Image image = 3;
  data.Image imageThumbnail = 4;
}
message LinkerDetail {
  repeated int64 linker_play_modes = 1;
  int32 big_party_layout_config_version = 2;
  bool accept_audience_pre_apply = 3;
  int64 linker_ui_layout = 4;
  int32 enable_audience_linkmic = 5;
  string function_type = 6;
  string ktv_lyric_mode = 8;
  string init_source = 9;
  bool forbid_apply_from_other = 10;
  int32 ktv_exhibit_mode = 11;
  int64 enlarge_guest_turn_on_source = 12;
}
message PreviewExposeData {
  int32 style = 1;
  data.PreviewExposeData.PreviewGuide preview_guide = 2;
  repeated data.PreviewExposeData.Meta metas = 3;
  repeated data.PreviewExposeData.ChatMessage chat_msgs = 4;
  repeated data.PreviewExposeData.Meta force_insertion = 5;
  int32 scroll_after_ms = 6;
  bool need_realtime = 7;
  int32 message_scroll_after_ms = 8;
  int32 message_scroll_interval_ms = 9;
  string preview_intro = 10;
  data.PreviewExposeData.PreviewExtendArea preview_extend_area = 11;
  int32 show_uv_pv = 12;
  int32 show_name_abbreviation = 13;
  data.PreviewExposeData.PreviewSwitch switch = 14;
  int32 is_preview_use_websocket = 15;
  bool is_aweme_video_feed = 16;
  bool show_preview_cards = 17;
  data.PreviewExposeData.PreviewPromotion preview_promotion = 18;
  data.PreviewExposeData.PreviewIMExtend preview_im_extend = 19;
  repeated data.PreviewExposeData.EtData et_data = 20;
  int32 alive_checker = 21;
  data.EnterPublicAreaAnimation enter_public_area_animation = 22;
  message PreviewGuide {
    data.Image icon = 1;
    string tip = 2;
    int64 type = 3;
    repeated string roll_tips = 4;
    int64 coupon_mate_id = 5;
    int64 user_tag_get_coin = 6;
    int64 live_mession_style = 7;
    string et_type = 8;
    string extra = 9;
  }
  message Meta {
    int32 type = 1;
    data.PreviewExposeData.Meta.Host host = 2;
    string content = 3;
    message Host {
      data.Image icon = 1;
      string tip = 2;
      string color = 3;
    }
  }
  message ChatMessage {
    string nick_name = 1;
    string nick_name_color = 2;
    string content = 3;
  }
  message PreviewExtendArea {
    data.Image extend_icon = 1;
    string extend_pre_text = 2;
    string extend_text = 3;
    int32 extend_type = 4;
    string extra = 5;
    int32 use_marquee = 6;
    int32 icon_type = 7;
    repeated data.PreviewExposeData.PreviewExtendArea.Part right_part = 8;
    string button_part = 9;
    repeated data.PreviewExposeData.PreviewExtendArea.Part mid_part = 10;
    bool need_delimiter = 11;
    repeated data.PreviewExposeData.PreviewExtendArea.Part bottom_part = 12;
    int32 ui_type = 13;
    int32 version = 14;
    data.PreviewExposeData.PreviewExtendArea.ActionConfig action_cfg = 17;
    bool use_pass_through_extra_json = 18;
    string pass_through_extra_json = 19;
    string extra_business = 21;
    bool no_need_poll = 22;
    int32 clickable_area = 24;
    message Part {
      int32 fontSize = 1;
      int32 interval = 2;
      string text = 3;
      bool cuttable = 4;
      bool deleted = 5;
      string font_color = 6;
      bool bold = 7;
      int32 part_type = 8;
      data.Image image = 9;
    }
    message ActionConfig {
      int32 areaAction = 1;
    }
  }
  message PreviewSwitch {
    int32 title = 1;
    int32 preview_guide = 2;
    int32 dynamic_label = 3;
    int32 assist_label = 4;
    int32 extend_area = 5;
  }
  message PreviewPromotion {
    repeated data.Image avatar_icons = 1;
    string text = 2;
    repeated string fast_comments = 3;
  }
  message PreviewIMExtend {
    int64 im_extend_type = 1;
    data.Image icon = 2;
    string main_title = 3;
    string sub_title = 4;
    string extra = 5;
  }
  message EtData {
    string type_enter_room = 1;
    string type_mob_params = 2;
    string type_params = 3;
    string type_first_room_params = 4;
    string type_first_room_mob_params = 5;
    string type_first_show_room_params = 6;
    string type_first_show_mob_params = 7;
  }
}
message PaidLiveData {
  int32 paid_type = 1;
  int32 view_right = 2;
  int64 duration = 3;
  data.TicketData ticket_session = 4;
  data.OrderData order_data = 5;
  int32 delivery = 6;
  bool need_delivery_notice = 7;
  int32 anchor_right = 8;
  int32 pay_ab_type = 9;
  data.AsyncAuthData async_auth_data = 12;
}
message AsyncAuthData {
  int64 keep_alive_time = 1;
  int64 async_authentication_operate = 2;
  int64 async_authentication_ab_type = 3;
  int64 keep_alive_time_stamp = 4;
  int64 buffer = 5;
}
message PaidLivePriceInfo {
  int32 start_time = 1;
  int32 end_time = 2;
  int64 price = 3;
  int32 claim_ddl = 4;
  int64 sku_id = 5;
}
message TicketData {
  int64 ticket_session_id = 1;
  string title = 2;
  string sub_title = 3;
  string price = 4;
  int64 raw_release_time = 5;
  repeated string tags = 6;
  string ticket_explanation_card_jump_url = 7;
  string ticket_panel_jump_url = 8;
  string ticket_session_id_str = 9;
  int32 sell_status = 10;
  string cover_uri = 11;
  string cover_uri_vertical = 12;
  string Introduction = 13;
  int64 raw_show_start_time = 14;
  int64 raw_show_end_time = 15;
  int64 raw_sale_start_time = 16;
  int64 raw_sale_end_time = 17;
  int64 raw_refund_deadline = 18;
  int64 raw_early_bird_start_time = 19;
  int64 raw_early_bird_end_time = 20;
  int64 raw_full_price_start_time = 21;
  int64 raw_full_price_end_time = 22;
  int64 raw_activity_start_time = 23;
  int64 raw_activity_end_time = 24;
  string early_bird_price = 25;
  string activity_price = 26;
  int32 status = 27;
  string show_start_time = 28;
  string show_end_time = 29;
  string sale_start_time = 30;
  string sale_end_time = 31;
  string early_bird_start_time = 32;
  string early_bird_end_time = 33;
  string full_price_start_time = 34;
  string full_price_end_time = 35;
  string activity_start_time = 36;
  string activity_end_time = 37;
  string refund_deadline = 38;
  string activity_title = 39;
  string activity_jump_url = 40;
  string release_time = 41;
  int32 ticket_explanation_card_status = 42;
  int32 last_duration = 43;
  string paid_conversion_jump_url = 44;
  string ticket_panel_six_jump_url = 45;
  string ticket_panel_nine_jump_url = 46;
  data.Image cover = 47;
  int32 ios_pay_type = 48;
  int32 android_pay_type = 49;
  int32 ios_pay_price = 50;
  int32 android_pay_price = 51;
  int32 right_duration = 52;
  data.PaidLivePriceInfo friend_priceInfo = 53;
  data.PaidLivePriceInfo helping_priceInfo = 54;
  int64 ticket_anchor_id = 56;
  string extra = 57;
  repeated data.TicketData.TicketSkuDetail sku_details = 58;
  data.TicketData.PaidLivePriceInfoV2 final_price_info = 59;
  int64 parent_ticket_session_id = 60;
  string parent_ticket_session_id_str = 61;
  int32 ticket_category = 62;
  message PaidLivePriceInfoV2 {
    string amount = 1;
    string currency = 2;
    int64 pos = 3;
    repeated int32 pay_type = 4;
  }
  message TicketSkuDetail {
    int32 ticket_type = 1;
    string ticket_name = 2;
    int64 start_sell_time = 3;
    int64 closing_sell_time = 4;
    int32 sell_status = 5;
    data.TicketData.PaidLivePriceInfoV2 price_info = 6;
    data.TicketData.PaidLivePriceInfoV2 dou_price_info = 7;
    int64 sku_id = 8;
  }
}
message OrderData {
  string order_id = 1;
}
message Appearance {
  data.Appearance.Bubble head_bubble = 1;
  int64 up_right_stats_display_type = 2;
  data.MoreEntrance entrance = 3;
  repeated data.ToolbarItemConfig toolbar_list = 4;
  int64 preview_style = 5;
  data.Image cover_gauss = 6;
  repeated data.Appearance.ContentTag content_tags = 7;
  data.PreviewLabel preview_label = 8;
  data.Image cover_dynamic_mask = 9;
  data.Image horizontal_background = 10;
  repeated data.Appearance.WideCover wide_cover_list = 11;
  data.Image blur_placeholder_img = 12;
  message Bubble {
    int32 type = 1;
    repeated string roll_tips = 2;
    data.Image icon = 3;
    int32 roll_after_ms = 4;
    int64 coupon_mate_id = 5;
    string et_type = 6;
    string extra = 7;
  }
  message ContentTag {
    string text = 1;
  }
  message WideCover {
    data.Image cover = 1;
    int64 cover_type = 2;
  }
}
message GameCPData {
  int32 is_live_a_promoted_a = 1;
  string game_id = 2;
  string game_name = 3;
}
message GamePlayData {
  int32 play_type = 1;
  int64 play_id = 2;
  int64 game_id = 3;
}
message RoomGameDataChannelConfig {
  string fusion_tag_id = 1;
  string game_id = 2;
  int64 live_stay_limit = 3;
}
message ToolBarComponentData {
  int32 group_id = 1;
  int32 component_type = 2;
  int32 op_type = 3;
  string text = 4;
  string schema_url = 5;
  data.Image icon = 6;
  int64 show_type = 7;
  int64 data_status = 8;
  string extra = 99;
}
message ToolBarData {
  repeated data.ToolBarComponentData entrance_list = 1;
  repeated data.ToolBarComponentData more_panel = 2;
  int32 max_entrance_cnt = 3;
  repeated data.ToolBarComponentData landscape_up_right = 4;
  int32 max_entrance_cnt_landscape = 6;
  data.ToolbarPermutation permutation = 7;
}
message LifeGrouponInfo {
  int64 permission_status = 1;
  int64 agg_card_id = 2;
  string icon_url = 3;
  string dynamic_url = 4;
}
message PreviewLabel {
  int32 type = 1;
  repeated string label_tips = 2;
  int32 label_type = 3;
  data.Image label_image = 4;
  bool hit_test = 5;
}
message HotRoomInfo {
  int64 BitMap = 1;
}
message ActivityLiveRecommendConfig {
  string name = 1;
  string level = 2;
  int64 start_time = 3;
  int64 end_time = 4;
  int32 live_type = 5;
  repeated int64 actor_uids = 6;
  data.ActivityLiveRecommendConfig.EpisodeInfo episode_info = 7;
  message EpisodeInfo {
    int32 content_type = 1;
    string content = 2;
  }
}
message RoomChannelData {
  int32 status = 1;
  repeated data.RoomChannelInfo channel_list = 2;
  int32 support_room_channel_mode = 3;
  int32 limit_of_num = 4;
  bool can_create = 5;
  data.Image background = 6;
  bool tab_landing = 7;
  bool can_link_mic = 8;
  bool hide_landscape = 101;
}
message PackMetaInfo {
  string scene = 1;
  string env = 2;
  string dc = 3;
  string trace_id = 4;
  string cluster = 5;
}
message LikeDisplayConfig {
  int32 show_text = 1;
  string display_text = 2;
}
message MatchRoomData {
  data.MatchDrawer drawer = 1;
  data.ToutiaoMatchData match = 2;
  data.Image drawer_label = 3;
  string pcu_str = 4;
  data.Image drawer_official_label = 5;
  data.Image match_background = 6;
  data.MatchUserInfo match_user_info = 7;
}
message MatchUserInfo {
  data.TeamInfo user_team_info = 1;
  bool is_activity_account = 3;
  bool need_retry = 4;
}
message TeamInfo {
  int64 team_id = 1;
  string team_name = 2;
  string schema_url = 3;
  data.Image team_icon = 4;
  data.Image team_badge = 5;
  data.Image team_background = 6;
  string system_msg = 7;
  string team_id_str = 8;
  data.Image team_avatar_box = 9;
}
message EnterPublicAreaAnimation {
  string public_area_effect_url = 1;
}
message GiftPanelTopperTray {
  string panel_schema = 1;
  repeated data.GiftPanelTopperTray.PeriodText period_texts = 2;
  int32 display_duration = 3;
  string jump_schema = 4;
  string animation_type = 5;
  int32 animation_gap = 6;
  int32 animation_freq = 7;
  int32 text_round_period = 8;
  message PeriodText {
    string text = 1;
    int32 daily_show_times = 2;
    int32 priority = 3;
    int32 panel_enum = 4;
    int32 key = 5;
  }
}
message EnterGiftAnimation {
  int32 gift_effect_id = 1;
  int32 display_gap = 2;
  int32 display_freq = 3;
}
message CircleInfo {
  int64 id = 1;
  string name = 2;
  data.Image cover_img = 3;
  string description = 4;
}
message EasterEggData {
  bool has_easter_egg = 1;
  int64 stage = 2;
  int64 total_stage = 3;
  int64 effects_num = 4;
  int64 start_count = 5;
  int64 end_count = 6;
  int64 count = 7;
  string panel_url = 8;
  data.Image entrance_icon = 9;
}
message EcomLiveCard {
  data.EcomProduct product = 1;
  data.EcomIcon icon = 2;
  data.EcomCampaign campaign = 3;
}
message EcomProduct {
  int64 promotion_id = 1;
  int64 product_id = 2;
  string title = 3;
  string cover_image = 4;
  data.EcomPrice price = 5;
  int64 regular_price = 6;
  int64 deposit_price = 7;
}
message EcomPrice {
  string prefix = 1;
  string suffix = 2;
  int64 by_cent = 3;
  string format_price = 4;
}
message EcomIcon {
  string url = 1;
}
message EcomCampaign {
  int64 remaining_seconds = 1;
  data.EcomAuction auction = 2;
  int64 type = 3;
}
message EcomAuction {
  int64 price = 1;
  string price_label = 2;
  string button_label = 3;
  data.EcomBidder user = 4;
  int64 status = 5;
}
message EcomBidder {
  string name = 1;
  data.EcomAvatar avatar = 2;
}
message EcomAvatar {
  string url = 1;
  int64 width = 2;
  int64 height = 3;
}
message EcomPop {
  int64 product_id = 1;
  int64 promotion_id = 2;
  string title = 3;
  string cover = 4;
  data.EcomPrice min_price = 5;
  string selling_point = 6;
  string jumanji_json = 7;
}
message Coupon {
  string icon = 1;
  string start_time = 2;
  string expire_time = 3;
  string coupon_name = 4;
  string url = 5;
  string coupon_string = 6;
  int64 countdown = 7;
  int64 show_type = 8;
  string coupon_meta_id = 9;
  string coupon_type = 10;
}
message Redpack {
  int64 redpack_type = 1;
  int64 redpack_activity_id = 2;
  string redpack_activity_display_text = 3;
  int64 start_apply_time = 4;
  int64 end_apply_time = 5;
  int64 preheat_time = 6;
  int64 server_time = 7;
  int64 has_applied = 8;
  string icon_url = 9;
}
message EcomGoodsCard {
  int64 product_id = 1;
  string title = 2;
  string cover = 3;
  data.EcomPrice min_price = 4;
  data.Coupon coupon = 5;
  int64 promotion_id = 6;
  int64 jump_destination = 7;
  int64 card_type = 8;
  data.Redpack redpack = 9;
}
message RedsShowInfo {
  int32 data_type = 1;
  string full_text = 2;
}
message SwitchExtraBase {
  string schema_for_check = 1;
}
message SwitchExtraForOpen {
  string schema_for_open = 1;
}
message GameInvite {
  int64 id = 1;
  int64 kind = 2;
  int64 create_time = 3;
  int64 now_time = 4;
  int64 expire_time = 5;
  int64 status = 6;
  int64 room_id = 7;
  string id_str = 8;
}
message InvitationSwitch {
  int64 id = 1;
  int32 game_kind = 2;
  int64 game_id = 3;
  int64 play_kind = 4;
  int64 status = 5;
  string message = 6;
  data.SwitchExtraBase extra_base = 7;
  data.SwitchExtraForOpen extra_for_open = 8;
  string id_str = 9;
}
message OfficialRoomInfo {
  bool is_show_more_anchor = 1;
  bool is_use_server_subtitle = 2;
  string server_subtitle = 3;
}
message VsEpisodeHighLight {
  int64 location = 1;
  string description = 2;
  data.Image image = 3;
}
message EpisodePremierePlay {
  repeated data.VsEpisodeHighLight highlights = 1;
  int32 play_type = 2;
  int64 start_time = 3;
  string play_text = 4;
  int64 text_duration = 5;
}
message VSWatermark {
  int64 position = 1;
  int64 landscape_dis = 2;
  int64 vertical_dis = 3;
  repeated data.VSWatermarkIcon watermark_icon = 4;
}
message VSWatermarkIcon {
  data.Image icon = 1;
  int64 icon_width = 2;
  int64 icon_type = 3;
  int64 landscape_dis = 4;
  int64 vertical_dis = 5;
}
message VSBar {
  data.VSItemBar item_comment = 1;
  data.VSItemBar item_bar = 2;
}
message VSItemComment {
  data.Image item_comment_icon_dark = 1;
  data.Image item_comment_icon_light = 2;
}
message VSItemBar {
  data.Image icon_dark = 1;
  data.Image icon_light = 2;
  string title = 3;
  string seperator = 4;
  string detail = 5;
  int64 watch_info_pv = 6;
  string watch_info_heat = 7;
  int64 collection_id = 8;
  int32 tab_id = 9;
  string content_type = 10;
}
message EpisodePreviewImage {
  data.Image preview_uri_up = 1;
  data.Image preview_uri_down = 2;
  int32 preview_type = 3;
  string preview_word_up = 4;
  string preview_word_down = 5;
}
message VSGiftPannel {
  repeated string background_colors = 1;
  data.Image background = 2;
  data.Image selected = 3;
  data.Image top_title = 4;
  data.Image background_bottom = 5;
  data.Image background_top = 6;
}
message EpisodePreviewBottom {
  string watch_period_str = 1;
  string latest_period_str = 2;
}
message VSPannelIcon {
  data.Image sp_landscape_icon = 1;
  data.Image sp_vertical_icon = 2;
  data.Image landscape_vertical_switch_icon = 3;
  data.Image lock_screen_icon = 4;
  data.Image landscape_more_icon = 9;
  data.Image vertical_more_icon = 10;
  data.Image landscape_comment_icon = 11;
  data.Image vertical_comment_icon = 12;
  data.Image vertical_landscape_switch_icon = 13;
  data.Image vertical_lock_screen_icon = 14;
}
message MultiCameraBasicInfo {
  data.Image icon = 1;
  string icon_background_color = 2;
  string panel_background_color = 3;
  data.Image icon_pad = 4;
  bool ban_xgs = 5;
  bool support_vs_core = 6;
  string name = 7;
  int32 default_display_duration = 8;
}
message CollectionItem {
  string collection_id = 1;
  int32 collection_type = 2;
  string title = 3;
  data.Image cover_img = 4;
  string original_vid = 5;
  string video_duration = 6;
  string collection_timing = 7;
  string tmpl_vid = 8;
  repeated int32 reflow_tag_list = 10;
  string room_id = 11;
  int32 collection_source = 12;
  string original_vid_url = 13;
  int32 collection_tag = 14;
  string episode_id = 15;
  string share_info = 16;
  int64 create_time = 17;
  int32 status = 18;
  string ug_share_info = 19;
  string degrade_vid_url = 20;
  int64 event_time = 21;
}
message SharePosterInfo {
  data.SharePosterInfo.PosterData data = 1;
  message PosterData {
    repeated data.Image poster = 1;
    repeated data.Image decorator = 2;
  }
}
message BusinessConfigure {
  int64 BusinessID = 1;
  int64 BusType = 2;
  int32 DelaySecond = 3;
  int64 PreciseTime = 4;
  int32 DisplaySecond = 5;
  data.ResourceConfigure ResConfig = 6;
  int64 DelType = 7;
}
message ResourceConfigure {
  int64 ResourceID = 1;
  data.BarrageConfigure BarrageConf = 2;
  data.ScreenBarConfigure ScreenBarConf = 3;
}
message BarrageConfigure {
  data.Image Logo = 1;
  string Text = 2;
  string AtomsBGColor = 3;
  string AtomsFrame = 4;
  string AtomsText = 5;
  data.Image Image = 6;
}
message ScreenBarConfigure {
  data.Image Image = 1;
  int32 IsDynamicImg = 2;
  string schema = 3;
  string jump_prompt = 4;
}
message MultiTab {
  string tab_title_color = 1;
  repeated data.MultiTab.TabItem tabs = 2;
  message TabItem {
    int64 tab_type = 1;
    string tab_name = 2;
    string jump_link = 3;
    int64 tab_id = 4;
    int32 tab_show_type = 5;
    repeated int64 hide_camera_ids = 6;
  }
}
message ToolbarBizSkin {
  data.Image icon = 1;
}
message ToolbarPermutation {
  data.ToolbarPermutation.Rule vertical = 1;
  data.ToolbarPermutation.Rule landscape = 2;
  data.ToolbarPermutation.Rule general = 3;
  message Rule {
    repeated int32 GroupPriority = 1;
    repeated int32 ComponentSequence = 2;
  }
}
message RoomChannelInfo {
  int64 channel_id = 1;
  string token = 2;
  bool is_owner = 3;
  int64 member_count = 4;
  repeated data.User top_user = 5;
  string channel_name = 6;
  int32 room_channel_mode = 7;
  data.User need_approval_user = 8;
  data.User owner = 9;
  int64 max_member_count = 10;
  data.RtcExtInfo rtc_ext_info = 200;
}
message RtcExtInfo {
  string link_mic_id_str = 1;
  string rtc_ext_info = 2;
  string live_core_exr_info = 3;
  string rtc_strategy = 4;
  string public_stream_id = 5;
}
message PlayByPlayItemInfo {
  int64 timestamp = 1;
  int64 player_id = 2;
  int64 ref_player_id = 3;
  int32 incident_type = 4;
  double elapsed = 5;
  double elapsed_plus = 6;
  string player_name = 7;
  string ref_player_name = 8;
  string player_id_str = 9;
  string ref_player_id_str = 10;
  int64 start_time_pts = 11;
  int64 end_time_pts = 12;
  int64 start_time_sei = 13;
  int64 end_time_sei = 14;
}
message PlayerInfo {
  int64 id = 1;
  string name = 2;
  int32 shirt = 3;
  string position = 4;
  int32 lineup_type = 5;
  data.Image portrait = 6;
  data.PlayByPlayItemInfo last_event = 7;
  double x_axis = 8;
  double y_axis = 9;
  int32 position_num = 10;
  double playing_time = 11;
  data.PlayerStats player_stats = 12;
  string player_id_str = 13;
  data.PlayByPlayItemInfo last_up_event = 14;
  repeated data.PlayByPlayItemInfo event_list = 15;
  int32 age = 16;
  double worth = 17;
  string club_name = 18;
  bool superstar_flag = 19;
  data.Image superstar_img = 20;
  string superstar_name = 21;
  string superstar_desc = 22;
}
message GoalStageDetail {
  string first_half_goal = 1;
  string second_half_goal = 2;
  string overtime = 3;
  string shots = 4;
  string total = 5;
}
message Against {
  string left_name = 1;
  data.Image left_logo = 2;
  string left_goal = 3;
  repeated data.PlayerInfo left_players = 4;
  data.GoalStageDetail left_goal_stage_detail = 5;
  string right_name = 6;
  data.Image right_logo = 7;
  string right_goal = 8;
  repeated data.PlayerInfo right_players = 9;
  data.GoalStageDetail right_goal_stage_detail = 10;
  int64 timestamp = 11;
  int64 version = 12;
  int64 left_team_id = 13;
  int64 right_team_id = 14;
  int64 diff_sei2abs_second = 15;
  int32 final_goal_stage = 16;
  int32 current_goal_stage = 17;
  int32 left_score_addition = 18;
  int32 right_score_addition = 19;
  int64 left_goal_int = 20;
  int64 right_goal_int = 21;
  data.BasketBallGoalStageDetail left_score_detail = 22;
  data.BasketBallGoalStageDetail right_score_detail = 23;
  data.BasketballStage basketball_stage = 24;
  data.ESportsStage esport_stage = 25;
}
message ToutiaoMatchData {
  int64 match_id = 1;
  string match_title = 2;
  data.Against against = 3;
  string started_time = 4;
  string city = 5;
  string venue_name = 6;
  string referee = 7;
  data.TeamStats team_stats = 8;
  repeated data.PlayerStats player_stats = 9;
  string match_group = 10;
  string match_round = 11;
  string match_phase_name = 12;
  bool can_subscribe = 13;
  int32 display_status = 14;
  string bjt_format = 15;
  string local_time_format = 16;
  int32 live_status = 17;
  int32 match_status = 18;
  string match_id_str = 19;
  int64 started_time_unix = 20;
  int32 left_score_addition = 21;
  int32 right_score_addition = 22;
  string duration = 23;
  repeated int64 event_ids = 24;
  int64 winner_id = 25;
  string winner_id_str = 26;
  data.Image winner_icon = 27;
  string event_name = 28;
  string bo_num = 29;
}
message TeamStats {
  int64 team_id = 1;
  double possession = 2;
  double shot_on = 3;
  double shot_off = 4;
  double free_kick = 5;
  double corner = 6;
  double counter = 7;
  double saves = 8;
  double offside = 9;
  double foul_commit = 10;
  double yellow_cards = 11;
  double redCards = 12;
  double pass = 13;
  double key_pass = 14;
  double passes_completed = 15;
  double steal = 16;
  double intercept = 17;
  double shots = 18;
  double possession_five_min = 19;
}
message PlayerStats {
  int64 player_id = 1;
  int64 team_id = 2;
  double minutes_played = 3;
  double goals = 4;
  double assists = 5;
  double shots = 6;
  double shots_on = 7;
  double y_cards = 8;
  double r_cards = 9;
  double offsides = 10;
  double fouls_committed = 11;
  double own_goals = 12;
  double saves = 13;
  double caught_ball = 14;
  double clean_sheets = 15;
  double pass = 16;
  double key_pass = 17;
  double passes_completed = 18;
  double steal = 19;
  double intercept = 20;
  double clearances = 21;
}
message MatchShareBackground {
  data.Image vertical_img = 1;
  data.Image horizontal_img = 2;
}
message MatchTitle {
  string room_title = 1;
  data.MatchTitle.TitleIcon title_icon = 2;
  message TitleIcon {
    string url = 1;
    int32 size_type = 2;
  }
}
message MatchTab {
  string title = 1;
  string schema = 2;
  int64 id = 3;
}
message MatchDrawer {
  string entry_name = 1;
  data.Image entry_icon = 2;
  string drawer_title = 3;
  data.Image drawer_background = 4;
  string return_btn_text = 5;
  int32 display_mode = 6;
}
message BasketBallGoalStageDetail {
  int32 first_period = 1;
  int32 second_period = 2;
  int32 third_period = 3;
  int32 forth_period = 4;
  int32 overtime = 5;
  int32 total = 6;
}
message BasketballStage {
  int32 current_stage = 1;
  int32 final_stage = 2;
}
message ESportsStage {
  int32 current_stage = 1;
  int32 final_stage = 2;
}
message PaidLiveItemInfo {
  int64 item_id = 1;
  int32 item_type = 2;
}
message PrivilegeInfo {
  int64 entity_id = 1;
  repeated data.PaidLiveItemInfo item_list = 2;
  int32 paid_live_type = 3;
  data.PrivilegeBaseInfo paid_live_info = 4;
  string extra = 5;
  data.PrivilegeUrl privilege_url = 6;
  data.PaidLiveUIBaseConfig ui_config = 7;
  data.PaidLiveConfig entity_config = 8;
}
message PrivilegeBaseInfo {
  int32 paid_live_type = 1;
  int32 view_right = 2;
  int32 delivery = 3;
}
message PrivilegeUrl {
  string privilege_panel_schema = 1;
  string privilege_card_schema = 2;
}
message PaidLiveConfig {
  int64 spu_id = 1;
  string spu_id_str = 2;
  int64 sku_id = 3;
  string sku_id_str = 4;
  string title = 5;
  string sub_title = 6;
  repeated string tags = 7;
  data.Image cover = 8;
  int32 sell_status = 9;
  int32 status = 10;
  repeated data.PaidLiveConfig.PriceInfo ios_pay_price_info = 11;
  repeated data.PaidLiveConfig.PriceInfo android_pay_price_info = 12;
  data.PaidLiveConfig.UserRight user_right = 13;
  message PriceInfo {
    int32 pay_type = 1;
    int64 price = 2;
    int32 right_duration = 3;
  }
  message UserRight {
    int32 view_right = 1;
    int64 duration = 3;
    int32 delivery = 6;
    bool need_delivery_notice = 7;
  }
}
message PaidLiveUIBaseConfig {
  int32 paid_live_type = 1;
  data.Image paid_live_icon = 2;
  string paid_live_icon_title = 3;
  int64 duration = 4;
  string no_right_end_title = 5;
  string no_right_end_sub_title = 6;
  string has_right_end_title = 7;
  string has_right_end_sub_title = 8;
  string paid_conversion_jump_url = 9;
  string panel_six_jump_url = 10;
  string feed_page_purchase_btn_word = 11;
  string purchase_btn_word = 12;
  string im_share_top_title = 13;
  string im_share_bottom_title = 14;
  string search_card_top_title = 15;
  string panel_feed_jump_url = 16;
  string panel_im_card_jump_url = 17;
  string panel_in_room_jump_url = 18;
  string panel_search_card_jump_url = 19;
}
message ChatReplyRespInfo {
  int64 reply_msg_id = 1;
  int64 reply_id = 2;
  data.Text reply_text = 3;
  int64 reply_uid = 4;
  string reply_webcast_uid = 5;
}
message GiftIMPriority {
  repeated int64 queue_sizes = 1;
  int64 self_queue_priority = 2;
  int64 priority = 3;
}
message ItemCardInfo {
  int32 item_card_type = 1;
  int32 card_play_type = 2;
  string card_value = 3;
  int64 rest_duration = 4;
  int64 failure_time = 5;
  string progress_text = 6;
  int32 item_card_status = 7;
  int64 mystery_rank_n = 8;
  int64 total_duration = 9;
  string card_name = 10;
}
message BreakthroughConfig {
  repeated data.BreakthroughConfig.Stage stages = 1;
  data.Image mvp_image = 2;
  int64 high_score_threshold = 3;
  message Stage {
    int64 target_score = 1;
    string end_animation_url = 2;
    string end_atmosphere_url = 3;
  }
}
message BreakthroughInfo {
  int64 stage = 1;
  int64 total_score = 2;
  int64 mvp_anchor_id = 3;
  int32 state = 4;
}
message BattleSettings {
  int64 battle_id = 1;
  int64 start_time_ms = 2;
  int64 duration = 3;
  string theme = 4;
  int64 channel_id = 5;
  int64 match_type = 6;
  int64 finished = 7;
  string banner_url = 8;
  int32 mode = 9;
  string config = 10;
  string notify_scheme_url = 11;
  string hotsoon_notify_scheme_url = 12;
  data.BattleTitleConfig title_config = 13;
  data.BattleTitleConfig punish_config = 14;
  int64 punish_duration = 15;
  int64 punish_start_time_ms = 16;
  int32 optimize_version = 17;
  bool punish_optimize_on = 18;
  int64 blood_display_duration = 19;
  int64 status_display_duration = 20;
  string toast = 21;
  bool need_close_linkmic = 22;
  bool display_last_result = 23;
  string normal_activity_name = 24;
  int32 invite_type = 25;
  data.BattleConfigSetting battle_config_setting = 27;
  data.BattleBarConfig bar_config = 28;
  data.BattleBarConfig hotsoon_bar_config = 33;
  int64 initiator_id = 34;
  int32 battle_type = 35;
  repeated int32 play_tags = 36;
  int64 steal_tower_duration = 37;
  string lynx_data = 38;
}
message BattleTitleConfig {
  data.Image icon = 1;
  string content = 2;
  string scheme = 3;
  string hotsoon_scheme = 4;
  data.Image new_icon = 7;
  data.Image pre_icon = 8;
  data.Image icon_back_img = 9;
}
message AnimeInfo {
  int32 bar_type = 1;
  int32 aura_type = 2;
  string normal_bar_url = 3;
  string buff_bar_url = 4;
  string steal_tower_bar_url = 5;
  string cur_bar_url = 6;
  string cur_aura_url = 7;
}
message BattleBarConfig {
  string left_color = 1;
  string right_color = 2;
  string left_score_view_color = 3;
  string right_score_view_color = 4;
  data.AnimeInfo anime_info = 5;
}
message BattleShellConfig {
  int64 shell_type = 1;
  string name = 2;
}
message BattleArmy {
  int64 anchor_id = 1;
  repeated data.BattleArmy.RankUser rank_list = 2;
  string anchor_id_str = 3;
  message RankUser {
    int64 user_id = 1;
    string nickname = 2;
    data.Image avatar_thumb = 3;
    int64 score = 4;
    string user_id_str = 5;
  }
}
message BattleScore {
  int32 score = 1;
  int64 user_id = 2;
  int32 rank_bonus_score = 3;
  int32 weekly_rank = 4;
  int32 winning_streak = 5;
  int32 winning_streak_bonus_score = 6;
  int32 battle_count_bonus_score = 7;
  string user_id_str = 8;
  int32 current_bonus = 9;
  data.BattleStarActivityGrade grade = 10;
  bool score_relative = 11;
  string score_relative_text = 12;
  bool is_large_pk_score = 13;
  bool room_like_trigger = 14;
  string score_blur_text = 15;
  int64 battle_rank = 16;
  bool new_score_open = 17;
  string multi_pk_team_score_text = 18;
  int64 multi_pk_team_score = 19;
  int64 multi_pk_team_rank = 20;
  bool is_multi_pk_relative_text = 21;
}
message BattleConsecutiveRecordInfo {
  int32 battle_result_type = 1;
  int64 consecutive_count = 2;
}
message BattleUserInfo {
  data.BattleUserInfo.BaseUserInfo user = 1;
  repeated data.BattleRivalTag tags = 2;
  data.BattleConsecutiveRecordInfo consecutive_record = 3;
  data.BattleStarActivityGrade grade = 4;
  data.BattleStarActivityGradeChange grade_change = 5;
  string team_coach_score = 6;
  int32 pk_role = 7;
  int32 pk_result = 8;
  data.ActivityUser activity_user = 9;
  int64 multi_pk_team_id = 10;
  string battle_start_desc_text = 11;
  data.BattleUserInfo.UserImgFlipInfo user_img_flip_info = 12;
  message BaseUserInfo {
    int64 user_id = 1;
    string nick_name = 2;
    data.Image avatar_thumb = 3;
    int32 gender = 4;
  }
  message UserImgFlipInfo {
    data.Image flip_image = 1;
    data.Image pk_stage_medal = 2;
    string pk_stage_desc = 3;
  }
}
message BattleSkinConfig {
  string start_animation_url = 1;
  string win_animation_url = 2;
  string lose_animation_url = 3;
  string draw_animation_url = 4;
  bool is_show_enter_user_info = 5;
  data.Image room_bg_full_image = 6;
  data.Image room_bg_top_image = 7;
  data.Image room_bg_bottom_image = 8;
  int64 enter_user_info_position = 9;
  int64 enter_show_time_ms = 10;
}
message BattleRivalTag {
  data.Image bg_image = 1;
  data.Image icon_image = 2;
  string content = 3;
  string font_color = 4;
  int32 tag_type = 5;
}
message TeamTask {
  data.TeamTask.Config config = 1;
  string battle_id = 3;
  string trigger_user_id = 4;
  int32 battle_type = 5;
  message ExtraConfig {
    data.TeamTask.SpecialGiftCountConfig special_gift_count_config = 5;
  }
  message PeriodConfig {
    int64 begin_second_relative_battle_finish = 1;
    int64 end_second_relative_battle_finish = 2;
  }
  message SpecialGiftCountConfig {
    int64 gift_id = 1;
    string gift_name = 2;
    data.Image icon = 3;
    int64 max_gift_count_per_user = 4;
    int64 current_gift_count = 5;
  }
  message Config {
    int64 reward_buff_multiple = 2;
    int32 task_type = 3;
    data.TeamTask.ExtraConfig extra_config = 4;
    int32 target_type = 5;
    int32 reward_type = 6;
    int32 team_work_team_task_type = 7;
    repeated int64 stage_reward_buff_multiple = 8;
  }
  message Info {
    int64 target_user_count = 1;
    int64 finish_user_count = 2;
    int32 result = 3;
    data.TeamTask.Reward reward = 4;
    int64 ratio = 5;
    int32 role = 6;
    data.ItemCardInfo item_card_info = 7;
    string value_text = 8;
    string progress_blur_text = 9;
  }
  message Reward {
    int64 begin_second_relative_battle_finish = 1;
    int64 end_second_relative_battle_finish = 2;
    int64 reward_score = 3;
    int64 current_reward_buff_multiple = 4;
  }
}
message BattleRankUser {
  data.User user = 1;
  int64 score = 2;
  int64 rank = 3;
  int64 grade_buff_score = 4;
  string sub_des = 5;
}
message BattleAnchorContributors {
  repeated data.BattleRankUser ranks = 1;
  int64 total_count = 2;
  repeated data.BattleBuffCardInfo buff_card_infos = 3;
}
message BattleContributorsRankListV2 {
  data.TeamTask team_task = 2;
  data.BattleSettings battle_settings = 3;
  int64 loser_id = 4;
  string loser_id_str = 5;
}
message OperationalPlay {
  int32 operational_play_type = 1;
  data.MultipleMatches3 multiple_matches_3 = 2;
}
message MultipleMatches3 {
  int64 current_match = 2;
  bool end = 3;
  int64 winner_uid = 4;
  int64 current_winner_uid = 5;
}
message MultipleMatchesUserInfo {
  int64 win_count = 1;
}
message ActivityUser {
  string activity_name = 1;
  data.Text display_tab_text = 2;
  int64 user_id = 3;
  string user_id_str = 4;
  repeated data.BattleRivalTag labels = 5;
  string sub_tab_text = 6;
  bool is_valid = 7;
  string message = 8;
  data.Image button_image = 9;
  repeated data.Image back_ground_images = 10;
}
message BattleSelfData {
  int64 pk_duration_time = 1;
  int32 pk_value_type = 2;
  int64 like_type = 3;
  int64 gift_value_type = 4;
  int64 gift_uv_type = 5;
  int64 ticket_type = 6;
  int64 set_uid = 7;
}
message BattleConfigSetting {
  int32 mod_type = 1;
  data.BattleSelfData self_data = 2;
  data.VoteSetting vote_data = 3;
  data.BattleSelfSettingRate self_setting_rate = 4;
  int64 flex_activity_id = 5;
  data.BattleShellConfig shell_config = 6;
  data.BreakthroughConfig breakthrough_config = 7;
  data.SpecifyGiftConfig specify_gift_config = 8;
  int32 play_mode = 9;
  int32 team_mode = 10;
  int32 activity_mode = 11;
}
message SpecifyGiftConfig {
  repeated int64 gift_ids = 1;
  int64 set_uid = 3;
  string des = 4;
}
message BattleSelfSettingRate {
  int64 pk_value_type = 1;
  int64 pk_2_like_rate = 2;
  int64 gift_2_pk_rate = 3;
  int64 gift_uv_2_pk_rate = 4;
  int64 ticket_2_pk_rate = 5;
  int64 set_uid = 6;
}
message GiftDetail {
  int64 gift_id = 1;
  string gift_name = 2;
  data.Image image = 3;
  string gift_des = 4;
}
message VoteSetting {
  int64 vote_type = 1;
  string vote_des = 2;
  int64 duration_time = 3;
}
message PanelTitle {
  string title = 1;
  string desc = 2;
  data.Image icon_bg_image = 3;
}
message BattleStarActivityGrade {
  string grade = 1;
  int64 level = 2;
  int64 star_count = 3;
  int64 target_star_count = 4;
  data.BattleStarActivityGradeMedal star_activity_grade_medal = 5;
  int32 grade_enum = 6;
}
message BattleStarActivityGradeMedal {
  data.Image grade_medal = 1;
  data.Image level_image = 2;
  data.Image badge_image = 3;
}
message BattleBuffCardMeta {
  int32 battle_buff_card_type = 1;
  string effect_json = 2;
  int64 effect_start_time_ms = 3;
  int64 effect_duration_ms = 4;
  int64 create_time_ms = 5;
  string card_extra_info = 6;
}
message BattleBuffCardInfo {
  int32 battle_buff_card_type = 1;
  repeated data.BattleBuffCardMeta effective_buff_cards = 2;
  int64 waiting_buff_cards_count = 3;
  int64 bonus_score = 4;
}
message BattleStarActivityGradeChange {
  int64 star = 1;
  int64 score = 2;
  string before_grade = 3;
  int64 before_level = 4;
  string current_grade = 5;
  int64 current_level = 6;
}
message LinkerBaseInfo {
  int32 scene = 1;
  repeated int64 play_modes = 2;
  int32 ui_layout = 3;
  int64 MaxMemberCount = 4;
}
message ListUser {
  data.User user = 1;
  int64 linkmic_id = 2;
  string linkmic_id_str = 3;
  int32 link_status = 4;
  int32 link_type = 5;
  int32 user_position = 6;
  int32 silence_status = 7;
  int64 modify_time = 8;
  int64 linker_id = 9;
  int32 role_type = 10;
  data.ListUser.Content content = 11;
  int64 mc_status = 12;
  int64 is_background = 13;
  data.HostInfo host = 14;
  data.MicPosTagInfo mic_pos_tag_info = 15;
  bool pk_available = 16;
  string extra = 200;
  message Content {
    data.ListUserLinkmicContent linkmic_content = 2;
    data.ListUserLinkmicAudienceContent linkmic_audience_content = 3;
  }
}
message BanUser {
  int64 user_id = 1;
  string reason = 2;
  string url = 3;
  string anchor_explain = 4;
  string audience_explain = 5;
}
message ListUserLinkmicContent {
  int64 resource_id = 1;
  bool show_identity = 2;
  int32 pk_user_role = 3;
  string game_name = 4;
  string fan_ticket = 5;
  int64 join_channel_time = 6;
  data.AnchorLinkmicIDInfo anchor_linkmic_id_info = 7;
  int32 anchor_auth_role = 8;
}
message AnchorLinkmicIDInfo {
  string main_linkmic_id_str = 1;
  string backup_linkmic_id_str = 2;
  bool use_backup_stream = 3;
}
message ListUserLinkmicAudienceContent {
  int64 fan_ticket = 1;
  bool host_permission = 2;
  int64 app_id = 3;
  int64 client_version = 4;
  string device_platform = 5;
  int64 join_channel_time = 6;
  int64 expected_leave_time = 7;
  bool in_waiting_list = 8;
  string extra = 9;
  int64 current_time = 10;
  string fan_ticket_fuzzy_str = 11;
  int32 list_user_role = 12;
  string fan_ticket_real_str = 13;
  repeated int64 rank_contributor_ids = 14;
  data.MicDress mic_dress = 15;
  int64 paid_count = 16;
  bool is_enlarged = 17;
  int64 self_discipline_duration = 18;
  bool is_anonymous = 19;
  int32 apply_type = 20;
  int64 self_discipline_start_time_ms = 21;
  int64 self_discipline_start_time = 22;
  int64 self_discripline_target_duration = 23;
  string device_id_str = 24;
  int32 themed_competition_role = 25;
}
message AudienceActionSource {
  int32 invite_source = 1;
  int32 permit_source = 2;
}
message SwitchSceneData {
  string rtc_ext_info = 1;
  string live_core_ext_info = 2;
  repeated data.ListUser linked_users = 3;
  int32 scene = 4;
  repeated int32 play_modes = 5;
  int32 ui_layout = 6;
  data.MultiRtcInfo multi_rtc_info = 7;
  data.MultiLiveCoreInfo multi_live_core_info = 8;
  data.MultiChannelInfo multi_channel_info = 9;
  int64 to_linker_id = 10;
  data.MultiAnchorExtra multi_anchor_extra = 11;
  int32 anchor_ui_layout = 12;
  int32 inviter_from_scene = 13;
}
message MultiAnchorExtra {
  int32 invite_role = 1;
  int64 match_type = 2;
}
message MultiLiveCoreInfo {
  int32 scene = 1;
}
message MultiRtcInfo {
  int32 scene = 1;
}
message ChangePlayModeData {
  repeated data.ListUser linked_users = 1;
  string rtc_ext_info = 2;
  string live_core_ext_info = 3;
  data.MultiRtcInfo multi_rtc_info = 4;
  data.MultiLiveCoreInfo multi_live_core_info = 5;
  repeated int32 play_modes = 6;
  uint64 version = 7;
}
message RoomLinkerContent {
  repeated data.ListUser linked_users = 1;
  int32 room_link_silence_status = 2;
  int64 anchor_id = 3;
  int64 is_anchor_background = 4;
  int64 version = 5;
}
message HostInfo {
  int64 is_host = 1;
  string host_position_name = 2;
}
message MicPosTagInfo {
  int32 tag_type = 1;
  string tag_name = 2;
  string text_color_value = 3;
  string bg_color_value = 4;
  int64 tag_type_id = 5;
  data.Image bg_color_img = 6;
  bool open_tag_desc_page = 7;
  string schema = 8;
}
message ChannelListUser {
  data.User user = 1;
  int32 link_status = 2;
  int32 link_type = 3;
  int32 silence_status = 4;
  int64 modify_time = 5;
  int64 linker_id = 6;
  int32 role_type = 7;
  int32 apply_type = 8;
  int32 invite_type = 9;
  int64 linker_reportor = 10;
  string rtc_user_id = 11;
  string extra = 200;
}
message AnchorLinkmicChannelInfo {
  string linkmic_id_str = 1;
  string rtc_ext_info = 2;
  data.MultiChannelInfo multi_channel_info = 3;
}
message KTVComponentMediaInfo {
  string ktv_live_core_ext_info = 1;
}
message PersonalKaraokeMediaInfo {
  string personal_karaoke_live_core_ext_info = 1;
}
message LinkmicMediaInfo {
  string rtc_ext_info = 1;
  string linkmic_id_str = 2;
  string live_core_ext_info = 3;
  data.MultiRtcInfo multi_rtc_info = 4;
  data.MultiLiveCoreInfo multi_live_core_info = 5;
}
message UpdateMediaInfoNotify {
  bool need_update = 1;
  int64 position = 2;
}
message LinkmicMediaParam {
  int32 linkmic_media_type = 1;
  data.LinkmicMediaInfo linkmic_media_info = 2;
  data.KTVComponentMediaInfo ktv_component_media_info = 3;
  data.UpdateMediaInfoNotify update_media_info_notify = 4;
  data.PersonalKaraokeMediaInfo personal_karaoke_info = 5;
}
message MCUContent {
  string current_stream_id = 1;
  string rivals_stream_id = 2;
}
message PreRTCInfo {
  int64 version = 3;
}
message PreRTCLinkUserInfo {
  bool rtc_push_stream = 1;
  string linkmic_id_str = 2;
  int32 link_status = 3;
}
message MicDress {
  data.VoiceWave voice_dress = 1;
  data.VoiceWave voice_wave = 2;
}
message VoiceWave {
  string dress_id = 1;
  data.Image low_img = 2;
  data.Image medium_img = 3;
  data.Image high_img = 4;
}
message EmojiPermission {
  bool has_permission = 1;
  string toast_without_permission = 2;
  string bottom_text = 3;
  string schema = 4;
}
message SendInteractEmojiConfig {
  data.Image interact_emoji = 1;
  int64 duration_ms = 2;
  int64 start = 3;
  data.Image own_emoji = 4;
  int64 own_emoji_duration_ms = 5;
  int64 offset = 6;
  int64 scale_up = 7;
  bool reshape = 8;
  string sound_url = 9;
  int64 reshape_start = 10;
}
message EmojiInteractResource {
  data.SendInteractEmojiConfig from_image = 1;
  data.SendInteractEmojiConfig pass_image = 2;
  data.SendInteractEmojiConfig to_image = 3;
}
message EmojiAvatarResource {
  int64 action_id = 1;
}
message EmojiTag {
  string content = 1;
}
message LinkmicAudienceEmoji {
  int64 emoji_id = 1;
  bool is_random = 2;
  data.Image emoji_image = 3;
  data.Image emoji_dynamic_image = 4;
  string emoji_name = 5;
  int64 animation_duration_ms = 6;
  int64 emoji_result_duration_ms = 7;
  int32 type = 8;
  data.EmojiPermission permission = 9;
  string emoji_sound = 10;
  data.EmojiInteractResource interact_resource = 11;
  int32 category_type = 12;
  data.EmojiAvatarResource avatar_resource = 13;
  bool need_reverse = 14;
  data.EmojiTag emoji_tag = 15;
  int32 emoji_status = 16;
}
message AnchorLinkmicInfo {
  string rtc_ext_info = 1;
  string linkmic_id_str = 2;
  bool use_backup_stream = 3;
}
message LinkmicPositionItem {
  int64 position = 1;
  int32 status = 2;
  string active_name = 3;
  int32 verify_status = 4;
  int32 position_type = 5;
}
message LinkmicQuickInteract {
  data.User send_gift_user = 1;
  int64 thanks_carousel_duration = 2;
  string thanks_content = 3;
  int64 receive_gift_user_id = 4;
}
message InviteRoomInfo {
  int64 inviter_room_id = 1;
  int64 live_room_mode = 2;
  int64 user_count = 3;
  int64 score = 4;
  string user_count_fuzzy = 5;
  string score_fuzzy = 6;
  string room_desc = 7;
  string inviter_room_id_str = 8;
}
message CrossRoomLinkReplyGuestInfo {
  int64 user_id = 1;
  bool is_low_client_version = 2;
  bool is_selected = 3;
  bool is_not_support_app = 4;
  string user_id_str = 5;
}
message UserHighScoreSongTag {
  string high_score_song_count = 1;
  string icon = 2;
  repeated string bg_color = 3;
}
message KtvSongStruct {
  int64 id = 1;
  string title = 2;
  string author = 3;
  int64 lyric_type = 4;
  string song_url = 5;
  repeated string lyric_url_list = 6;
  int64 duration = 7;
  string cover_url = 8;
  int64 song_pattern = 9;
  double preview_start_time = 10;
  data.KtvSongStruct.AudioInfo full_track = 11;
  data.KtvSongStruct.AudioInfo accompaniment_track = 12;
  string new_cover_url = 13;
  string midi_url = 14;
  bool is_favorite = 15;
  data.KtvSongStruct.OrderInfo order_info = 16;
  repeated string tags = 17;
  repeated data.MusicInterval music_climax = 19;
  repeated data.MusicInterval preludes = 20;
  repeated data.MusicInterval interludes = 21;
  repeated data.MusicInterval segments = 22;
  string pattern_file_url = 23;
  repeated data.MusicInterval bridge_segments = 24;
  repeated data.MusicInterval main_segments = 25;
  repeated data.MusicInterval finale_segments = 26;
  data.ChorusVideoInfo chorus_info = 27;
  int32 song_type = 28;
  string add_song_source = 29;
  int64 total_order_with_cur_anchor = 30;
  int64 global_total_order = 31;
  repeated int64 artist_ids = 32;
  string id_str = 33;
  repeated int32 song_copyright = 34;
  bool is_prior_song = 35;
  bool is_fragment_song = 36;
  string fragment_lyric = 37;
  data.KtvSongStruct.PersonalSongInfo personal_song_info = 38;
  string lyric_hash = 39;
  string midi_hash = 40;
  data.KtvSongStruct.WantListenInfo want_listen_info = 41;
  data.KtvSongStruct.ChallengeInfo challenge_info = 42;
  message AudioInfo {
    string url = 1;
    int64 song_patten = 2;
    int64 audio_id = 3;
    double volume_lufs = 4;
    double volume_peak = 5;
    double bpm = 6;
    string beats_point_url = 7;
    int64 create_time = 8;
    string file_hash = 9;
  }
  message UserInfo {
    int64 id = 1;
    string nickname = 2;
    data.Image avatar = 3;
    string id_str = 4;
    string high_score_song_count = 5;
    string ktv_stage_mic_pos_tag_text = 6;
    int32 ktv_lyric_text = 7;
    string ktv_component_lyric_text_first_line = 8;
    int32 ktv_component_lyric_text_second_line = 9;
    data.UserHighScoreSongTag high_score_song_tag = 10;
    int64 hit_midi_record_ab = 11;
    double user_midi_score = 12;
    bool is_high_score_song = 13;
  }
  message OrderInfo {
    data.KtvSongStruct.UserInfo top_user = 1;
    int64 score = 2;
    int64 order_count = 3;
    bool has_added = 4;
  }
  message PersonalSongInfo {
    double user_midi_score = 1;
    bool is_high_score_song = 2;
  }
  message WantListenInfo {
    int64 want_listen_count = 1;
  }
  message ChallengeInfo {
    int32 ktv_challenge_type = 1;
    bool is_success = 2;
    double score = 3;
  }
}
message MusicInterval {
  int64 StartTimeMillisecond = 1;
  int64 DurationMillisecond = 2;
}
message ChorusVideoInfo {
  int64 item_id = 1;
  string item_description = 2;
  string item_url = 3;
  int64 author_id = 4;
  string author_name = 5;
  int64 use_times = 6;
  data.Image image = 7;
}
message KtvAtmosphereVideoFrameColorData {
  data.KtvAtmosphereVideoFrameColorData.Color main = 1;
  data.KtvAtmosphereVideoFrameColorData.Color secondary = 2;
  message Color {
    int32 red = 1;
    int32 green = 2;
    int32 blue = 3;
  }
}
message KtvAtmosphereVideoInfo {
  string vid = 1;
  string play_auth_token = 2;
  int32 video_type = 3;
  repeated data.KtvAtmosphereVideoFrameColorData frame_color_data = 4;
  repeated string video_url = 5;
}
message LinkmicTeamfightContributors {
  repeated int64 user_ids = 1;
}
message LinkmicTeamfightPlayer {
  int64 user_id = 1;
  int64 score = 2;
  string score_str = 3;
  string score_fuzzy = 4;
  data.LinkmicTeamfightContributors contributors = 5;
  int32 role = 6;
}
message LinkmicTeamfightBonusInfo {
  int64 start_time = 1;
  int64 duration = 2;
  double coefficient = 3;
}
message LinkmicTeamfightTeamInfo {
  int64 team_id = 1;
  int64 score = 2;
  string score_str = 3;
  string score_fuzzy = 4;
  data.LinkmicTeamfightContributors contributors = 5;
  repeated data.LinkmicTeamfightPlayer players = 6;
  bool is_score_fuzzy = 7;
  int64 owner_id = 8;
  string team_id_str = 9;
  data.LinkmicTeamfightBonusInfo bonus_info = 10;
}
message LinkmicTeamfightInfo {
  int64 teamfight_id = 1;
  string teamfight_id_str = 2;
  int32 type = 3;
  int32 status = 4;
  int64 start_time = 5;
  int64 duration = 6;
  int64 punish_start_time = 7;
  int64 punish_duration = 8;
  repeated data.LinkmicTeamfightTeamInfo team_infos = 9;
  int64 win_team_id = 10;
  int64 current_time_ms = 11;
  int32 pk_bar_style = 12;
  int64 show_start_time = 13;
  int64 initiator_user_id = 14;
  int32 score_type = 15;
  int64 show_duration = 16;
  int64 initiator_anchor_id = 17;
  string win_team_id_str = 18;
  string dress_id = 19;
  data.TeamfightRoomBattleContent room_battle_content = 100;
}
message JoinTeamfightInfo {
  int64 team_id = 1;
  string team_id_str = 2;
}
message RoomBattleProcessInfo {
  int32 status = 1;
  data.RoomBattleProcessSelectGuestsContent select_guests_content = 2;
  data.RoomBattleProcessWaitingBattleContent waiting_battle_content = 3;
}
message RoomBattleProcessSelectGuestsContent {
  repeated data.CrossRoomLinkReplyGuestInfo guest_infos = 1;
}
message RoomBattleProcessWaitingBattleContent {
  string toast = 1;
  int64 select_guests_waiting_sec = 2;
}
message RoomBattleRoomInfo {
  int64 id = 1;
  int32 join_status = 2;
  int64 start_operator_user_id = 3;
}
message TeamfightRoomBattleContent {
  int32 invite_source = 2;
  string extra = 3;
  data.RoomBattleMode room_battle_mode = 4;
  string if_theme_default = 5;
  int64 theme_chooser_room_id = 6;
  int64 if_peak_hour = 7;
  string anchor_relation_type = 8;
  string begin_type = 9;
}
message RoomBattleThemeParam {
  int64 theme_id = 1;
  int32 theme_type = 2;
  string theme_title = 3;
  string theme_description = 4;
}
message RoomBattleMode {
  int32 room_battle_mode_type = 1;
  data.RoomBattleThemeParam room_battle_theme_param = 100;
}
message ChorusInfo {
  int64 chorus_id = 1;
  int64 lead_singer_id = 2;
  int64 start_time = 3;
  int64 finish_time = 4;
}
message ChorusSongInfo {
  data.KtvSongStruct music = 1;
  bool is_self_seeing = 2;
}
message BottomRightCardArea {
  int32 type = 1;
  uint32 priority = 2;
  int32 toolbar_type = 3;
  data.CombineType combine_type = 4;
  data.CardDisplayInfo card_display_info = 5;
  data.AnimConfig anim_config = 61;
  bool is_preloading = 62;
  int32 mock_type = 6;
}
message AnimConfig {
  bool is_anim_supported = 1;
  int32 enter_anim_type = 2;
  int32 exit_anim_type = 3;
}
message CombineType {
  int32 area_type = 1;
  int32 area_sub_type = 2;
}
message CardDisplayInfo {
  int32 card_id = 1;
  string url = 2;
  string fallback_url = 3;
  int32 container_type = 4;
  int64 duration_ms = 5;
  uint32 width = 10;
  uint32 height = 11;
  uint32 bottom = 12;
  uint32 right = 13;
  string container_payload = 20;
  data.CardTriggerConfig trigger_config = 30;
  repeated data.CardCondition condition_list = 31;
  data.CardPreDefeatStrategy pre_defeat_strategy = 40;
  data.CardShowDefeatStrategy show_defeat_strategy = 41;
  data.LandScapeConfig landscape_config = 60;
  string accessible_name = 50;
}
message LandScapeConfig {
  bool is_landscape_supported = 1;
  uint32 width = 2;
  uint32 height = 3;
  uint32 bottom = 4;
  uint32 right = 5;
}
message CardTriggerConfig {
  uint32 strategy = 1;
  repeated data.CardTrigger commonTriggerList = 2;
}
message CardTrigger {
  int32 type = 1;
  int64 value = 2;
}
message CardCondition {
  int32 type = 1;
  int64 value = 2;
}
message CardPreDefeatStrategy {
  int32 type = 1;
  int64 value = 2;
  string extra = 3;
}
message CardShowDefeatStrategy {
  int32 type = 1;
  int64 value = 2;
  string extra = 3;
}
message GiftPreviewInfo {
  int64 lock_status = 1;
  bool client_block_use_scheme_url = 2;
  string block_scheme_url = 3;
  bool client_check_left_diamond = 4;
  string block_toast = 5;
}
message BuffLockInfo {
  bool locked = 1;
  string toast = 2;
  string schema = 3;
  string cell_text = 4;
}
message GiftBuffInfo {
  string text = 1;
  string text_color = 2;
  data.Image bg_img = 3;
  data.Image sweep_light_img = 4;
  data.Image buff_gift_describe_img = 5;
  int64 buff_gift_id = 6;
  int32 buff_level = 7;
  bool buff_can_send = 8;
  int64 buff_diamond_count = 9;
  string lock_toast = 10;
  int64 default_chose_action = 11;
  int64 start_time = 12;
  data.BuffLockInfo buff_lock_info = 13;
}
message GiftTip {
  data.Text display_text = 1;
  string background_color = 2;
  data.Image prefix_image = 3;
  int64 remaining_duration = 4;
  data.Text remaining_duration_suffix_text = 5;
  int64 countdown_deadline_time = 6;
}
message GiftStruct {
  data.Image image = 1;
  string describe = 2;
  bool notify = 3;
  int64 duration = 4;
  int64 id = 5;
  data.GiftStruct.GiftStructFansClubInfo fansclub_info = 6;
  bool for_linkmic = 7;
  bool doodle = 8;
  bool for_fansclub = 9;
  bool combo = 10;
  int32 type = 11;
  int32 diamond_count = 12;
  bool is_displayed_on_panel = 13;
  int64 primary_effect_id = 14;
  data.Image gift_label_icon = 15;
  string name = 16;
  string region = 17;
  string manual = 18;
  bool for_custom = 19;
  data.Image icon = 21;
  int32 action_type = 22;
  int32 watermelon_seeds = 23;
  string gold_effect = 24;
  repeated data.LuckyMoneyGiftMeta subs = 25;
  int64 golden_beans = 26;
  int64 honor_level = 27;
  int32 item_type = 28;
  string scheme_url = 29;
  data.GiftPanelOperation gift_operation = 30;
  string event_name = 31;
  int64 noble_level = 32;
  string guide_url = 33;
  bool punish_medicine = 34;
  bool for_portal = 35;
  string business_text = 36;
  bool cny_gift = 37;
  int64 app_id = 38;
  int64 vip_level = 39;
  bool is_gray = 40;
  string gray_scheme_url = 41;
  int64 gift_scene = 42;
  data.GiftBanner gift_banner = 43;
  repeated string trigger_words = 44;
  repeated data.GiftBuffInfo gift_buff_infos = 45;
  bool for_first_recharge = 46;
  data.Image dynamic_img_for_selected = 47;
  int32 after_send_action = 48;
  int64 gift_offline_time = 49;
  string top_bar_text = 50;
  data.Image top_right_avatar = 51;
  string banner_scheme_url = 52;
  bool is_locked = 53;
  int64 req_extra_type = 54;
  repeated int64 asset_ids = 55;
  data.GiftPreviewInfo gift_preview_info = 56;
  data.GiftTip gift_tip = 57;
  int32 need_sweep_light_count = 58;
  repeated data.GiftGroupInfo group_info = 59;
  data.Text bottom_text = 60;
  int32 mystery_shop_status = 61;
  repeated int64 optional_asset_ids = 62;
  bool disable_wish_list = 63;
  data.GiftStruct.GiftMsgBoard gift_msg_board = 64;
  data.EmojiInteractResource emoji_interact_resource = 65;
  bool tray_dynamic_img_flippable = 66;
  int64 pico_show_action = 67;
  int64 selected_dynamic_effect = 68;
  data.GiftTouchLabel gift_touch_label = 69;
  data.GiftUnselectedBottomInfo unselected_bottom_info = 70;
  data.GiftConfirmInfo gift_confirm_info = 71;
  int32 biz_type = 72;
  data.GoodsBizItem biz_item = 73;
  message GiftStructFansClubInfo {
    int32 min_level = 1;
    int32 insert_pos = 2;
  }
  message GiftMsgBoard {
    bool for_msg_board = 1;
    string prompt_text = 2;
  }
}
message GoodsBizItem {
  data.BizGoods goods = 1;
  data.BizEntrance entrance = 2;
}
message BizGoods {
  data.GoodsStruct goods = 1;
  string extra = 2;
  int64 consume_scene = 3;
}
message BizEntrance {
  string scheme_url = 1;
}
message GiftConfirmInfo {
  string title = 1;
  string text = 2;
  string cancel_button_text = 3;
  string confirm_button_text = 4;
  int32 confirm_type = 5;
}
message GiftUnselectedBottomInfo {
  string text = 1;
}
message GiftTouchLabel {
  data.Image icon = 1;
  string unique_key = 2;
}
message GiftGroupInfo {
  int32 group_count = 1;
  string group_text = 2;
}
message GiftPanelOperation {
  data.Image left_image = 1;
  data.Image right_image = 2;
  string title = 3;
  string title_color = 4;
  int64 title_size = 5;
  string scheme_url = 6;
  string event_name = 7;
}
message FreeGift {
  int64 id = 1;
  int64 count = 2;
  string content = 3;
  int64 group_id = 4;
  int64 repeat_count = 5;
  int64 fan_tickets = 6;
  int64 waterwmlon = 7;
}
message LuckyMoneyGiftMeta {
  data.Image image = 1;
  string describe = 2;
  int64 id = 3;
  int32 diamond_count = 4;
  data.Image icon = 5;
}
message AnchorGiftData {
  data.Image anchor_diy_origin_img = 1;
}
message GiftBanner {
  data.Text display_text = 1;
  string display_text_bg_color = 2;
  data.Image box_img = 3;
  data.Image bg_img = 4;
  string scheme_url = 5;
  bool animate = 6;
  int64 box_id = 7;
  int64 available_box_count = 8;
}
message EffectMixImageInfo {
  string image_key = 1;
  data.Image mix_image = 2;
}
message AssetEffectMixInfo {
  repeated data.EffectMixImageInfo effect_mix_image_infos = 1;
}
message GiftTrayInfo {
  data.Text tray_display_text = 1;
  data.Image tray_base_img = 2;
  data.Image tray_head_img = 3;
  data.Image tray_right_img = 4;
  int64 tray_level = 5;
  data.Image tray_dynamic_img = 6;
  string tray_schema_url = 7;
  int32 tray_type = 8;
  data.Image tray_base_img_v2 = 9;
  data.Image tray_right_img_v2 = 10;
  bool use_high_layer = 11;
  int64 duration = 12;
  string toast = 13;
  int32 tray_slide_rate = 14;
  data.TrayPreEffect tray_pre_effect = 15;
  data.TrayPostEffect tray_post_effect = 16;
  int64 origin_gift_id = 17;
  int64 buff_level = 18;
  string toolbar_card_name = 19;
}
message TrayPreEffect {
  data.Image pre_effect_img = 1;
  int64 tray_start_time = 2;
  data.Image tray_ripple = 3;
  string pre_schema = 4;
  int64 pre_duration = 5;
  int32 pre_effect_source = 6;
  string extra = 7;
}
message TrayPostEffect {
  data.Image post_effect_img = 1;
  string post_schema = 2;
  int64 post_duration = 3;
  int32 post_effect_source = 4;
}
message SeriesPlayGift {
  data.GiftStruct gift_struct = 1;
  data.SeriesTrayInfo series_tray_info = 2;
  data.SendTogether send_together = 3;
  string diy_item_info = 4;
  data.AnchorGiftData anchor_gift = 5;
  data.AssetEffectMixInfo asset_effect_mix_info = 6;
}
message SeriesTrayInfo {
  int64 duration = 1;
  data.Image static_img = 2;
  data.Image dynamic_img = 3;
}
message SendTogether {
  string id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
}
message ExtraEffect {
  int64 asset_id = 1;
  int32 display_form = 2;
}
message GoodsStruct {
  int64 goods_id = 1;
  int64 goods_type = 2;
  string name = 3;
  int64 diamond_count = 4;
  data.Image icon = 5;
  string description = 6;
  int64 offline_time = 7;
  string extra = 8;
  repeated int64 options = 50;
}
message GameImage {
  repeated string url_list = 1;
  string uri = 2;
  int64 height = 3;
  int64 width = 4;
  int64 rotation = 5;
}
message GameImageBundler {
  data.GameImage origin_image = 1;
  data.GameImage thumb_image = 2;
  data.GameImage thumb_heif_image = 3;
}
message PlayTeamMember {
  data.User user = 1;
  int32 status = 2;
}
message GiftVoteResult {
  string text = 1;
  int64 count = 2;
  data.Image icon = 3;
  int64 gift_id = 4;
  string name = 5;
  int64 diamond_count = 6;
  int64 gift_type = 7;
  string count_str = 8;
}
message ShowStatusLabel {
  string show_status_label_text = 1;
  float show_status_label_text_transparency = 2;
  string show_status_label_bg_color = 3;
}
message GroupShowUserItem {
  data.User group_show_user = 1;
  string description = 2;
  string send_button_text = 3;
  int64 group_show_fan_ticket_count = 4;
  int64 group_show_cur_round_fan_ticket_count = 5;
  int64 show_end_time = 6;
  int32 identity_label = 7;
  data.Image live_avatar_frame_image = 8;
  data.Image bg_image = 9;
  data.ShowStatusLabel show_status_label = 10;
  bool is_best_shower = 11;
  int32 show_status = 12;
}
message GroupShowInfo {
  repeated data.GroupShowUserItem group_show_users = 1;
  int64 description_style = 2;
  string title = 3;
  string sub_title = 4;
  data.Image background_image = 5;
  int64 group_show_scene = 6;
  bool is_live_show = 7;
  string toast_text = 8;
  bool is_group_show_anchor = 9;
}
message GrowthTaskCondDef {
  int64 id = 1;
  string key = 2;
  string desc = 3;
  string operator = 4;
  string extra = 5;
}
message GrowthTaskCondition {
  data.GrowthTaskCondDef def = 1;
  string desc = 2;
  int64 current_value = 3;
  int64 target_value = 4;
  string display_current_value = 5;
  string display_target_value = 6;
  string display_delta = 7;
}
message GrowthTaskRewardDef {
  int64 id = 1;
  int32 reward_type = 2;
  int32 settle_type = 3;
  string target = 4;
  string desc = 5;
  string operator = 6;
  string send_param_str = 7;
  string extra = 8;
  string name = 9;
}
message GrowthTaskReward {
  data.GrowthTaskRewardDef def = 1;
  int32 status = 2;
  string extra = 3;
  int64 remaining_count = 4;
}
message GrowthTaskStage {
  repeated data.GrowthTaskCondition condition_list = 1;
  repeated data.GrowthTaskReward reward_list = 2;
  int64 completed_time = 3;
}
message GrowthTask {
  int64 id = 1;
  string id_str = 2;
  int64 live_id = 3;
  int64 app_id = 4;
  int64 class_id = 5;
  int64 group_id = 6;
  int32 item_type = 7;
  string item_id = 8;
  string task_name = 9;
  string task_desc = 10;
  int64 start_time = 11;
  int64 end_time = 12;
  int64 display_start_time = 13;
  int64 display_end_time = 14;
  int32 status = 15;
  int64 completed_stage = 16;
  int64 finish_time = 17;
  repeated data.GrowthTaskStage stage_list = 18;
  string extra = 19;
  string config = 20;
  int64 create_time = 21;
}
message GrowthTaskContributorRank {
  data.User user = 1;
  int64 score = 2;
  int64 rank = 3;
}
message GuestBattleGradeItem {
  int64 level = 1;
  string level_str = 2;
  int64 score = 3;
  string score_str = 4;
  bool is_full_level = 5;
}
message GuestBattleUserGradeInfo {
  data.GuestBattleGradeItem cur_grade = 1;
  data.GuestBattleGradeItem next_grade = 2;
  int64 upgrade_score = 3;
  string upgrade_score_str = 4;
}
message GuestBattleUIInfo {
  data.Image open_animation = 1;
  data.Image score_icon = 2;
}
message GuestBattleContributors {
  repeated int64 user_ids = 1;
}
message BattleResult {
  int64 guest_id = 1;
  string score = 2;
  int64 rank = 3;
  string score_fuzzy = 4;
  data.GuestBattleContributors contributors = 5;
  data.LinkmicQuickInteract quick_interact = 6;
  data.GuestBattleUserGradeInfo crown_info = 7;
  string nickname = 8;
  int64 score_num = 9;
  int32 role = 10;
  string guest_id_str = 11;
}
message GuestBattleInfo {
  int64 battle_id = 1;
  int64 battle_type = 2;
  int64 status = 3;
  repeated data.BattleResult results = 4;
  int64 current_time = 5;
  int64 finish_time = 6;
  int64 show_duration = 7;
  string battle_id_str = 8;
  int64 loser_num = 9;
  string dress_id = 10;
  int64 score_type = 11;
  data.GuestBattleUIInfo ui_info = 12;
}
message Banner {
  int64 id = 1;
  string title = 2;
  data.Image image = 3;
  int64 height = 4;
  int64 width = 5;
  string schema_url = 6;
  int64 action_type = 7;
  int64 banner_type = 8;
  int64 priority = 9;
  string text = 10;
  int64 frame_type = 11;
  string extra = 12;
  int64 status = 13;
  int64 uid = 14;
  int64 roomid = 15;
  int64 appointment_start_timestamp = 16;
  int64 appointment_end_timestamp = 17;
  int64 appointment_id = 18;
}
message BannerCollapse {
  data.Text collapse_title = 1;
  data.Image collapse_image = 2;
  bool enable = 3;
  string background_color = 4;
  int64 collapse_height = 5;
  string vertical_line_color = 6;
}
message BannerContainer {
  string container_url = 1;
  repeated data.Banner banner_list = 2;
  data.Image animation_image = 3;
  data.BannerCollapse collapse = 4;
  int64 container_height = 5;
  int64 container_width = 6;
  string lynx_container_url = 7;
  int64 container_type = 8;
  repeated string token_list = 9;
}
message BannerData {
  data.BannerContainer top_right = 1;
  data.BannerContainer bottom_right = 2;
  data.BannerContainer gift_panel = 3;
  data.BannerContainer middle = 4;
  data.BannerContainer activity_top_right = 5;
  data.BannerContainer top_left = 6;
  data.BannerContainer live_scene = 7;
  data.BannerContainer activity_vs_interactive = 8;
  data.BannerContainer activity_interactive = 9;
  data.BannerContainer activity_vs_bottom_right = 10;
}
message LikeIconInfo {
  repeated data.Image icons = 1;
  message IconList {
    repeated data.Image icons = 1;
  }
}
message ChatEmojiGuideInfo {
  repeated data.ChatEmojiGuideInfo.EmojiGuideConf emojis = 1;
  message EmojiGuideConf {
    string emoji = 1;
    repeated string trigger_words = 2;
    int64 begin_time = 10;
    int64 end_time = 11;
  }
}
message ChatImageGuideInfo {
  repeated data.ChatImageGuideInfo.ImageGuideConf images = 1;
  message ImageGuideConf {
    string image_id = 1;
    data.Image image = 2;
    string text = 3;
    repeated string trigger_words = 4;
    int64 begin_time = 10;
    int64 end_time = 11;
  }
}
message ShareItemStyle {
  string item_type = 1;
  string item_id = 2;
  data.Image icon = 3;
  string name = 4;
  string name_color = 5;
  string schema = 6;
  string description = 7;
}
message BuoyMaterial {
  data.Image buoy_ball = 1;
  data.Image buoy_tailing = 2;
  data.Image univ_scatter_deco_a = 3;
  data.Image univ_scatter_deco_b = 4;
  data.Image univ_scatter_deco_c = 5;
  data.Image advan_scatter_deco_a = 6;
  data.Image advan_scatter_deco_b = 7;
}
message BackgroundMaterial {
  data.Image buoy_area_bg = 1;
  data.Image global_bg = 2;
  data.Image scoreboard_bg = 3;
  string tone_line_start = 4;
  string tone_line_end = 5;
}
message FeedbackMaterial {
  data.Image nice = 1;
  data.Image good = 2;
  data.Image perfect = 3;
  data.Image advan_perfect_bg = 4;
  data.Image advan_perfect_tx = 5;
}
message MidiSkinMaterial {
  data.BuoyMaterial buoy = 1;
  data.BackgroundMaterial bg = 2;
  data.FeedbackMaterial feedback = 3;
  string lyric_color_value = 4;
}
message AddDressPrompt {
  bool has_add_dress = 1;
  int64 add_dress_version = 2;
}
message MidiSkinDressInfo {
  string dress_id = 1;
  data.MidiSkinMaterial material = 2;
}
message LinkPhase {
  int32 phase_id = 1;
  int32 phase_seconds_begin = 2;
  int32 phase_seconds_end = 3;
}
message LinkPhaseConfig {
  repeated data.LinkPhase phases = 1;
  int32 easter_egg_cartoon_seconds = 2;
}
message LinkmicSetting {
  int32 key = 1;
  int32 value = 2;
  data.SettingContent content = 3;
}
message SettingContent {
  data.ApplicationReasonContent application_reason_content = 1;
  data.BidPaidLinkmicContent bid_paid_linkmic_content = 2;
  data.NormalPaidLinkmicSettingContent normal_paid_linkmic_setting_content = 3;
  data.NormalPaidLinkmicDescContent normal_paid_linkmic_desc_content = 4;
  data.BidPaidLinkmicSettingContent bid_paid_linkmic_setting_content = 5;
  data.KTVChallengeContent ktv_challenge_content = 6;
  data.RoomBattleSettingContent room_battle_setting_content = 7;
  data.NormalPaidLinkmicAddPriceContent normal_paid_linkmic_add_price_content = 8;
  data.GuestBattleConfigContent guest_battle_config_content = 9;
  data.TeamFightConfigContent team_fight_config_content = 10;
  data.SelfDisciplineInfo self_discipline_info = 11;
  data.DuoBattleConfigContent duo_battle_config_content = 12;
  data.KTVComponentContent ktv_component_content = 13;
  data.AudioSubtitleContent audio_subtitle_content = 14;
  data.LinkmicInitInfoContent linkmic_init_info_content = 15;
}
message LinkmicInitInfoContent {
  data.InitInfoSetting video_chat_init_info = 1;
}
message InitInfoSetting {
  int64 scene = 1;
  int64 ui_layout = 2;
  int64 auto_open = 3;
}
message AudioSubtitleContent {
  int64 audio_subtitle_value = 1;
}
message ApplicationReasonContent {
  string ApplicationReasonExample = 1;
  string DefaultApplicationReasonExample = 2;
}
message BidPaidLinkmicContent {
  int64 start_price = 1;
  int64 link_duration = 2;
  int64 max_bid_price = 3;
  int64 bid_duration = 4;
  repeated data.BidPaidLinkmicOptionalStep bid_steps = 5;
}
message NormalPaidLinkmicSettingContent {
  int64 paid_count = 1;
  int64 limited_time = 2;
}
message NormalPaidLinkmicDescContent {
  repeated int64 saved_tag_ids = 1;
  repeated data.PaidLinkmicTag saved_tag_infos = 2;
  string saved_desc = 3;
  string reviewed_desc = 4;
}
message BidPaidLinkmicSettingContent {
  int64 start_price = 1;
  int64 link_duration = 2;
}
message KTVChallengeContent {
  int64 TargetScore = 1;
  int64 TargetDurationSecond = 2;
}
message RoomBattleSettingContent {
  int64 battle_duration = 1;
  bool accept_invite = 2;
  bool only_accept_following_invite = 3;
  bool not_accept_less_than_three_linked_invite = 4;
  data.RoomBattleThemeParam room_battle_theme_param = 5;
}
message NormalPaidLinkmicAddPriceContent {
  int32 add_price_strategy = 1;
  int64 custom_add_price_value = 2;
}
message GuestBattleConfigContent {
  int32 is_anchor_involved = 1;
  int64 last_battle_duration_by_anchor = 2;
  int64 loser_num = 3;
  int64 score_type = 4;
}
message TeamFightConfigContent {
  int64 last_fight_duration_by_anchor = 1;
}
message DuoBattleConfigContent {
  int64 duration = 1;
  int32 score_type = 2;
}
message SelfDisciplineInfo {
  repeated string target_list = 1;
  string current_target = 2;
  string target_icon_uri = 3;
  string text = 4;
  int64 punch_duration = 6;
  string room_punch_count = 7;
  int64 version = 8;
}
message KTVComponentContent {
  int32 KTVComponentSwitchStatus = 1;
}
message BidPaidLinkmicOptionalStep {
  int64 bid_left_closed_interval = 1;
  int64 bid_right_closed_interval = 2;
  int64 bid_step = 3;
}
message BidPaidLinkmicBidInfo {
  int64 bid_price = 1;
  int64 bid_users_uv = 2;
  int64 server_left_time = 3;
  string user_name = 4;
  int64 user_id = 5;
  data.Image user_avatar = 6;
  uint64 version = 7;
  string sec_user_id = 8;
}
message BidPaidLinkmicDealInfo {
  int64 win_price = 1;
  string user_name = 2;
  int64 user_id = 3;
  data.Image user_avatar = 4;
  string sec_user_id = 5;
}
message BidPaidLinkmicBidRecord {
  int64 bid_price = 1;
  string user_name = 2;
  int64 user_id = 3;
  data.Image user_avatar = 4;
  bool is_start_price = 5;
  string sec_user_id = 6;
}
message NormalPaidLinkmicInfo {
  int64 paid_count = 1;
  int64 limited_time = 2;
  int32 status = 3;
  int32 add_price_strategy = 4;
  int64 add_price_value = 5;
  int64 add_price_multiple = 6;
}
message PaidLinkmicTag {
  int64 id = 1;
  string name = 2;
  data.Image pic = 3;
}
message PaidLinkmicExplainCardInfo {
  int64 num_of_link = 1;
  float avg_grade = 2;
  data.PaidLinkmicTag tag = 3;
}
message MsgBoardItemInfo {
  int64 id = 1;
  string id_str = 2;
  data.User sender = 3;
  string content = 4;
  int32 process_status = 5;
  int64 gift_id = 6;
  int64 msg_disappear_time = 7;
}
message OrderSingItemV2 {
  data.User order_user = 1;
  data.User gift_sender = 2;
  string item_id = 3;
  int32 microphone_type = 4;
  int64 gift_id = 5;
  int64 gift_diamond_count = 6;
  data.Image order_sing_gift_icon = 7;
}
message CurrentOrderSingItemV2 {
  data.OrderSingItemV2 current_sing_item = 1;
  data.MicrophoneTaskDataV2 microphone_task_data = 2;
}
message MicrophoneTaskDataV2 {
  int64 current_score = 1;
  int64 need_score_to_next = 2;
  int32 order_sing_stage = 3;
}
message AdventurFont {
  string text = 1;
  string color = 2;
}
message AdventureCardInfo {
  int64 card_id = 1;
  int64 from_stage_id = 2;
  data.Image background = 3;
  int64 pair_id = 5;
  data.AdventurFont title = 7;
  int64 card_unique_id = 8;
  data.AdventurFont timestamp = 9;
  string paired_user_nickname_color = 10;
  string card_unique_id_str = 11;
  string pair_id_str = 12;
}
message AdventurePairInfo {
  int64 pair_id = 1;
  data.AdventureUserInfo from_user = 2;
  data.AdventureUserInfo to_user = 3;
  int64 score = 4;
  int64 next_stage_score = 5;
  int64 stage_id = 6;
  data.AdventureStageInfo stage_info = 7;
  int32 pair_status = 8;
  int32 call_status = 9;
  int64 caller_user_id = 10;
  string pair_id_str = 11;
}
message AdventureStageInfo {
  int64 stage_id = 1;
  string stage_name = 2;
  data.Image stage_background = 3;
  int64 stage_lower_limit_score = 5;
  repeated int64 stage_lower_limit_score_list = 6;
  int32 button_status = 7;
  int64 stage_call_duration = 8;
  repeated int64 stage_call_duration_list = 9;
  int32 stage_type = 10;
  data.Image process_bar_track_image = 11;
  data.Image process_bar_image = 12;
  data.Image process_bar_dot_image = 13;
  data.Image process_bar_header_image = 14;
  data.Image process_bar_bubble_image = 15;
  data.Image process_bar_bubble_header_image = 16;
  data.Image paired_user_avatar_bg = 17;
  string paired_user_avatar_bg_border_color = 18;
  int64 stage_bg_type = 19;
}
message AdventureUserInfo {
  int64 user_id = 1;
  data.Image avatar_thumb = 2;
  string nick_name = 3;
  int64 score = 4;
  int64 rank = 5;
  bool is_mvp = 8;
  int32 user_status = 9;
  int64 invited_count = 10;
  repeated int64 invite_users = 11;
  int32 call_status = 12;
  data.Image new_im_icon_with_level = 13;
  int32 gender = 14;
}
message AdventureSettingContent {
  data.Image header_background = 1;
  repeated data.AdventureStageInfo stage_info_list = 2;
  data.AdventureStageInfo call_stage = 3;
}
message AdventurePlayModeInfo {
  repeated data.AdventureUserInfo linked_user_list = 5;
  int32 play_mode_status = 7;
  data.AdventureSettingContent setting_content = 8;
  int64 play_id = 9;
  data.Image start_animation = 10;
  data.Image finish_animation = 11;
  string play_id_str = 12;
}
message ChatMatchGroupInfo {
  string group_id = 1;
  int64 tag_id = 2;
  int64 disband_time = 3;
  int32 status = 4;
  repeated data.User group_user_list = 5;
  int64 version = 6;
}
message InteractiveScreenCastInfo {
  string item_app_id = 1;
  int32 item_type = 2;
}
message LinkmicGameInfo {
  int64 play_id = 1;
  string game_id = 2;
  string game_category = 3;
}
message ThemedCompetitionSetting {
  string theme = 1;
  int32 theme_type = 2;
  int32 selection_type = 3;
  int64 win_count = 4;
  repeated int64 judges_user_id_list = 5;
  int64 max_judges_count = 6;
  int64 max_win_count = 7;
  repeated string server_theme_list = 8;
  string custom_theme = 9;
  int64 max_score = 10;
  bool can_edit_score = 11;
  repeated int64 max_score_candidates = 12;
}
message ThemedCompetitionInfo {
  data.ThemedCompetitionSetting setting = 1;
  int32 status = 3;
  int64 competition_id = 4;
  int64 current_performer_user_id = 5;
  message Score {
    int64 score = 1;
    string score_fuzz = 2;
    int32 win_type = 3;
    int64 rank = 4;
    bool show_effect = 5;
  }
}
message LotteryExpandActivityInfo {
  int64 biz_id = 1;
  string expand_activity_id = 2;
  string rule_text = 3;
  string tips_text = 4;
  int64 expand_lucky_count = 5;
  int64 expand_grant_count = 6;
  string extra_gift_bag = 10;
  int64 bytepay_voucher_switcher = 11;
}
message LotteryRegularlyConfig {
  int32 times = 1;
  int32 interval = 2;
}
message LotteryInfo {
  int64 lottery_id = 1;
  int64 owner_user_id = 2;
  int64 anchor_id = 3;
  int32 owner_type = 4;
  int64 room_id = 5;
  int32 status = 6;
  data.LotteryPrize prize_info = 7;
  repeated data.LotteryCondition conditions = 8;
  int64 prize_count = 9;
  int64 lucky_count = 10;
  int64 count_down = 11;
  int64 start_time = 12;
  int64 draw_time = 13;
  string extra = 14;
  int64 real_lucky_count = 15;
  int64 total_grant_count = 16;
  int64 withdraw_count = 17;
  int64 real_draw_time = 18;
  repeated data.LotteryLuckyUser lucky_users = 19;
  int64 current_time = 20;
  int64 candidate_num = 21;
  string lottery_id_str = 22;
  string room_id_str = 23;
  string sec_anchor_id = 24;
  string sec_owner_user_id = 25;
  repeated data.LotteryExpandActivityInfo expand_activity_info_list = 26;
  bool use_new_draw_interaction = 27;
  string launch_task_id = 30;
  int32 index = 31;
  data.LaunchTaskInfo launch_task_info = 32;
  string client_biz_data = 50;
  string server_biz_data = 51;
  string ui_config = 52;
}
message LaunchTaskInfo {
  int64 launch_task_id = 1;
  string launch_task_id_str = 2;
  int64 launch_task_status = 3;
  int64 had_launch_count = 5;
  int64 last_lottery_id = 6;
  data.LotteryRegularlyConfig regularly_config = 4;
}
message LotteryPrize {
  int64 prize_id = 1;
  int32 type = 2;
  string name = 3;
  string image = 4;
  string prize_description = 5;
}
message LotteryCondition {
  int64 condition_id = 1;
  int32 type = 2;
  string content = 3;
  int32 status = 4;
  string description = 5;
  int64 gift_id = 6;
  int64 gift_count = 7;
  string gift_name = 8;
  int64 need_diamond_count = 9;
  int64 min_fans_level = 10;
  string remarks = 30;
  string biz_info = 31;
}
message LotteryLuckyUser {
  int64 lucky_id = 1;
  int64 lottery_id = 2;
  int64 room_id = 3;
  int64 user_id = 4;
  string user_name = 5;
  string avatar_url = 6;
  int64 grant_count = 7;
  string user_extra_info = 8;
  string order_info = 9;
  string sec_user_id = 10;
  int64 prize_type = 11;
  string prize_name = 12;
  int64 expire_time = 13;
  repeated data.VoucherPrizeInfo voucher_prize_list = 14;
  bool use_new_award = 15;
  data.LotteryLuckyUser.Award award = 16;
  message Award {
    string summary_description = 15;
    repeated data.LotteryLuckyUser.Award.PrizeDetail prize_details = 16;
    message PrizeDetail {
      int32 interest_show_type = 1;
      string interest_show_unit = 2;
      string interest_value = 3;
      string prize_name = 4;
      string prize_description = 5;
    }
  }
}
message VoucherPrizeInfo {
  string prize_amount = 1;
  string prize_batch_name = 2;
  int64 expire_time = 3;
  string prize_unit = 4;
  string desc = 5;
}
message Portal {
  int64 start_time = 1;
  int64 enter_count = 2;
  data.User sugar_daddy = 3;
  int64 room_id = 4;
  data.User anchor = 5;
  int64 portal_id = 6;
  int32 user_type = 7;
  int64 invitee_count = 8;
  int32 status = 9;
  int64 wait_duration = 10;
  int64 reward_duration = 11;
  int64 total_amount = 12;
  data.Image cover = 13;
  int64 room_lucky_money_amount = 14;
  repeated data.User audiences = 15;
  int64 distribute_strategy = 16;
}
message BetOption {
  int64 id = 1;
  string option_name = 2;
  int64 money = 3;
  int64 rate = 4;
  bool win = 5;
  bool can_bet = 6;
  int64 can_bet_money = 7;
}
message AnchorHistoryItem {
  string quiz_id = 1;
  string quiz_title = 2;
  string options = 3;
  int32 quiz_status = 4;
  int64 countdown_time = 5;
  int64 win_option = 6;
  string template_id = 7;
  string fail_reason = 8;
  int64 create_time = 9;
  int64 settle_again = 10;
  int64 absolute_end_time = 11;
}
message Quiz {
  string quiz_id = 1;
  string title = 2;
  string options = 3;
  int32 quiz_status = 4;
  int64 countdown_time = 5;
  int64 win_option = 6;
  int64 bet_option = 7;
  string gain = 8;
  string template_id = 9;
  int64 absolute_end_time = 10;
}
message ChatIdentity {
  int32 show_identity = 1;
  data.Image identity_label = 2;
}
message StampInfo {
  int32 type = 1;
  string id = 2;
  string title = 3;
  string open_url = 4;
  string web_url = 5;
  data.Image icon = 6;
  int32 status = 7;
  string description = 8;
  data.Image thumbnail = 9;
  string extra = 98;
  string log_extra = 99;
}
message AudienceEntranceInfo {
  int64 interact_type = 1;
  string elem_id = 2;
  int64 start_id = 3;
  int64 status = 4;
  string name = 5;
  data.Image icon = 6;
  bool check_entrance_visitable = 7;
  bool need_metrics_report = 8;
  string schema_url = 9;
  int32 source = 10;
  int32 punish_status = 11;
  string im_extra = 97;
  string log_extra = 98;
  string entrance_extra = 99;
}
message CustomizedCardInfo {
  int32 status = 1;
  string open_url = 2;
  int64 duration = 3;
  int32 card_type = 4;
  string content = 5;
  int64 source = 6;
  int32 punish_status = 7;
  string im_extra = 97;
  string log_extra = 98;
  string cover_extra = 99;
  string app_id = 100;
  string server_timestamp = 101;
}
message GameCardInfo {
  int32 display_status = 1;
  int64 status = 2;
  string open_url = 3;
  string content = 4;
  string app_id = 5;
  int64 save_time = 6;
  int64 duration = 7;
}
message ShelfCardInfo {
  int64 card_id = 1;
  string schema = 2;
  string default_title = 3;
  string default_cover_url = 4;
  string customized_title = 5;
  string customized_cover_url = 6;
  repeated data.Image image = 7;
  string source_page = 8;
  int32 review_status = 9;
  bool from_review = 10;
  bool can_modify_cover = 11;
  int64 status = 12;
  int32 card_source = 13;
  string create_info = 14;
  string review_result_reason = 15;
  int32 review_title_status = 16;
  string reviewing_title = 17;
  string last_pass_title = 18;
  string last_pass_img = 19;
  data.ProductInfo product_info = 20;
  string log_extra = 96;
}
message ShelfMicroAppInfo {
  string app_id = 1;
  string name = 2;
  data.Image icon = 3;
  string schema = 4;
  repeated data.MicroAppLabel label = 5;
}
message MicroAppLabel {
  string name = 1;
  int32 font_size = 2;
  string font_color = 3;
  string background_begin_color = 4;
  string background_end_color = 5;
  string url = 6;
}
message ShelfInfo {
  data.ShelfMicroAppInfo app_info = 1;
  repeated data.ShelfCardInfo card_info_list = 2;
  int64 start_id = 3;
  int32 source = 4;
  int32 status = 5;
  int32 punish_status = 6;
  int32 mount_type = 7;
  string client_extra = 9;
  string im_extra = 97;
  string log_extra = 98;
}
message ProductInfo {
  string product_id = 1;
  string title = 2;
  string img_url = 3;
  repeated data.ProductIntroductionInfo introduction_list = 4;
  repeated data.ProductLabelInfo label_list = 5;
  data.ProductPriceInfo price = 6;
  string action_text = 7;
  bool isShow = 8;
}
message ProductPriceInfo {
  string original_price = 1;
  string current_price = 2;
  string current_prefix = 3;
  string current_suffix = 4;
}
message ProductIntroductionInfo {
  string content = 1;
  int32 font_size = 2;
  string font_color = 3;
  int32 introduction_type = 4;
}
message ProductLabelInfo {
  string left_text = 1;
  string right_text = 2;
  int32 font_size = 3;
  string font_color = 4;
  string border_color = 5;
  bool dividing_line = 6;
  int32 label_type = 7;
}
message PropSummary {
  int64 primary_effect_id = 1;
  int64 next_expire = 2;
  string description = 3;
  int64 prop_def_id = 4;
  string manual = 5;
  int64 diamond = 6;
  bool reddot_tip = 7;
  data.Image icon = 8;
  int32 count = 9;
  string name = 10;
  data.GiftStruct gift = 11;
  data.Image label_icon = 12;
  bool is_fragment = 13;
  int64 fragments_compound_count = 14;
  int64 is_aweme_free_gift = 15;
  data.Image diamond_icon = 16;
  data.Banner banner = 17;
  int64 prop_def_type = 18;
  repeated data.HotfixGiftDataForProp gifts = 19;
  string scheme_url = 20;
  bool is_displayed_on_panel = 21;
  int64 prop_def_sub_type = 22;
}
message HotfixGiftDataForProp {
  data.Text display_text = 1;
  string describe = 2;
  int64 gift_id = 3;
  int64 group_count = 4;
  int64 repeat_count = 5;
  int64 combo_count = 6;
  int64 msg_id = 7;
}
message EpisodeHighLight {
  int64 location = 1;
  string description = 2;
  data.Image image = 3;
  data.Image small_image = 4;
  int64 location_end = 5;
  bool hot = 6;
  int64 collection_id = 7;
  string pid = 8;
  string location_str = 9;
}
message MysteryRankUserItem {
  data.MysteryUserInfo User = 1;
  int64 Score = 2;
  int64 Rank = 3;
}
message MysteryUserImage {
  repeated string url_list = 1;
  int64 height = 2;
  int64 width = 3;
}
message MysteryUserInfo {
  int64 user_id = 1;
  string id_str = 2;
  string live_room_id_str = 3;
  string nick_name = 4;
  data.MysteryUserImage avatar_thumb = 5;
  bool mystery = 6;
}
message ProfitInteractionSetting {
  bool show_interaction_score_close = 1;
}
message RankEnterInfo {
  repeated data.RankEnterInfo.RankInfo rank_infos = 1;
  bool hidden_enter = 2;
  data.Image icon = 3;
  repeated data.RankEnterInfo.Page default_page = 4;
  int64 period_remaining_second = 5;
  repeated data.RankEnterInfo.RankInfo rank_infos_without_shop = 6;
  bool display_ktv_rank = 7;
  repeated data.RankEnterInfo.RankInfo default_rank_infos = 8;
  repeated data.RankEnterInfo.RankInfo customized_default_rank_infos = 9;
  message Page {
    int32 jump_rank_type = 1;
    string content = 2;
    int32 content_type = 3;
    string background_color = 4;
  }
  message RankInfo {
    repeated data.RankEnterInfo.Page pages = 1;
    data.Image icon = 2;
    int32 position = 3;
    int32 rank_type = 4;
    string title = 5;
    string rank_extra = 6;
    string entrance_extra = 7;
  }
}
message RanklistHourEntrance {
  repeated data.RanklistHourEntrance.Info global_infos = 1;
  repeated data.RanklistHourEntrance.Info default_global_infos = 2;
  repeated data.RanklistHourEntrance.Info vertical_infos = 3;
  repeated data.RanklistHourEntrance.Info default_vertical_infos = 4;
  message Page {
    string content = 1;
    string background_color = 2;
    int64 show_times = 3;
    int32 content_type = 4;
  }
  message Detail {
    repeated data.RanklistHourEntrance.Page pages = 1;
    int32 ranklist_type = 2;
    string title = 3;
    string ranklist_extra = 4;
    string entrance_extra = 5;
    string schema = 6;
  }
  message Info {
    repeated data.RanklistHourEntrance.Detail details = 1;
  }
}
message RoomIntroLabel {
  int32 label_tag = 1;
  string label_name = 2;
  string label_text = 3;
  string label_icon = 4;
  string type_name = 5;
}
message TreasureDetail {
  string key = 1;
  string content = 2;
  int64 count_down = 3;
  int32 trigger_timing = 4;
  string count_down_key = 5;
}
message FreqCtrlParams {
  int32 strategy = 1;
  int64 limit = 2;
  string key = 3;
  int64 cur = 4;
  int64 duration = 5;
}
message RefreshParams {
  int32 refresh_mechanism = 1;
  int64 polling_interval = 2;
}
message TouchPositionMeta {
  int64 id = 1;
  int64 meta_id = 2;
  int32 position = 3;
  int64 template = 4;
  repeated data.FreqCtrlParams freq_ctrl_params_list = 5;
  int64 duration = 6;
  repeated data.RefreshParams refresh_params_list = 7;
  int64 priority = 8;
}
message TaskCurrentInfo {
  int64 pk_win_count = 1;
  int64 room_like_count = 2;
  int64 subscribe_count = 4;
}
message TaskConditionExtra {
  int64 customized_gift_id = 1;
  data.Image gift_icon = 2;
}
message TaskCondition {
  string key = 1;
  int64 value = 2;
  string operator = 3;
  data.TaskConditionExtra extra = 4;
}
message TaskTodoStep {
  repeated data.TaskCondition conditions = 1;
}
message TaskTodo {
  repeated data.TaskTodoStep steps = 1;
}
message TaskRecord {
  int32 task_status = 1;
  int64 task_class_id = 2;
  repeated data.TaskTodo todos = 3;
  data.TaskCurrentInfo current_info = 4;
  int32 wish_type = 5;
  data.WishContributor wish_contributor = 6;
}
message WishContributor {
  repeated data.WishContributor.Contributor contributors = 1;
  int64 total_count = 2;
  bool show_score = 3;
  message Contributor {
    int64 user_id = 1;
    string sec_user_id = 2;
    data.Image avatar = 3;
    string nick_name = 4;
    string score_desc = 5;
  }
}
message AppUserInfo {
  string app_id = 1;
  int64 game_id = 2;
  string open_uid = 3;
}
message GiftAudienceReceiverItem {
  data.User user = 1;
  int64 score = 2;
  bool gift_auth = 3;
  string off_reason_toast = 4;
}
message StartSingMultiChorusContent {
  data.MultiChorusCommonContent common = 1;
}
message JoinMultiChorusContent {
  data.MultiChorusCommonContent common = 1;
}
message LeaveMultiChorusContent {
  data.MultiChorusCommonContent common = 1;
}
message FinishMultiChorusContent {
  data.MultiChorusCommonContent common = 1;
  int32 finish_reason = 2;
  string toast = 3;
}
message MultiChorusCommonContent {
  int64 user_id = 1;
  data.MultiChorusInfo multi_chorus_info = 2;
}
message MultiChorusUpdateMessage {
  int32 msg_type = 1;
  data.StartSingMultiChorusContent start_sing_multi_chorus_content = 2;
  data.JoinMultiChorusContent join_multi_chorus_content = 3;
  data.LeaveMultiChorusContent leave_multi_chorus_content = 4;
  data.FinishMultiChorusContent finish_multi_chorus_content = 5;
}
message MultiChorusInfo {
  repeated int64 user_ids = 1;
  int64 leader_user_id = 2;
  int64 song_id = 3;
  int32 song_type = 4;
  string chorus_id = 6;
}
message MultiChorusUserBase {
  int64 id = 1;
  data.Image avatar_thumb = 2;
  int32 secret = 3;
  string sec_uid = 4;
  int32 mystery_man = 5;
}
message MoreLiveEntrance {
  string name = 1;
  int64 tab_type = 2;
  int64 valid_time = 3;
  int64 priority = 4;
  string extra = 5;
  string event_extra = 6;
}
